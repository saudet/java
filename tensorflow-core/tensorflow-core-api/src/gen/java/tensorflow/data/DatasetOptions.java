// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/dataset_options.proto

package tensorflow.data;

public final class DatasetOptions {
  private DatasetOptions() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Represents the type of auto-sharding we enable.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.data.AutoShardPolicy}
   */
  public enum AutoShardPolicy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * AUTO: Attempts FILE-based sharding, falling back to DATA-based sharding.
     * </pre>
     *
     * <code>AUTO = 0;</code>
     */
    AUTO(0),
    /**
     * <pre>
     * FILE: Shards by input files (i.e. each worker will get a set of files to
     * process). When this option is selected, make sure that there is at least as
     * many files as workers. If there are fewer input files than workers, a
     * runtime error will be raised.
     * </pre>
     *
     * <code>FILE = 1;</code>
     */
    FILE(1),
    /**
     * <pre>
     * DATA: Shards by elements produced by the dataset. Each worker will process
     * the whole dataset and discard the portion that is not for itself. Note that
     * for this mode to correctly partitions the dataset elements, the dataset
     * needs to produce elements in a deterministic order.
     * </pre>
     *
     * <code>DATA = 2;</code>
     */
    DATA(2),
    /**
     * <pre>
     * HINT: Looks for the presence of `shard(SHARD_HINT, ...)` which is treated
     * as a placeholder to replace with `shard(num_workers, worker_index)`.
     * </pre>
     *
     * <code>HINT = 3;</code>
     */
    HINT(3),
    /**
     * <pre>
     * OFF: No sharding will be performed.
     * </pre>
     *
     * <code>OFF = -1;</code>
     */
    OFF(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * AUTO: Attempts FILE-based sharding, falling back to DATA-based sharding.
     * </pre>
     *
     * <code>AUTO = 0;</code>
     */
    public static final int AUTO_VALUE = 0;
    /**
     * <pre>
     * FILE: Shards by input files (i.e. each worker will get a set of files to
     * process). When this option is selected, make sure that there is at least as
     * many files as workers. If there are fewer input files than workers, a
     * runtime error will be raised.
     * </pre>
     *
     * <code>FILE = 1;</code>
     */
    public static final int FILE_VALUE = 1;
    /**
     * <pre>
     * DATA: Shards by elements produced by the dataset. Each worker will process
     * the whole dataset and discard the portion that is not for itself. Note that
     * for this mode to correctly partitions the dataset elements, the dataset
     * needs to produce elements in a deterministic order.
     * </pre>
     *
     * <code>DATA = 2;</code>
     */
    public static final int DATA_VALUE = 2;
    /**
     * <pre>
     * HINT: Looks for the presence of `shard(SHARD_HINT, ...)` which is treated
     * as a placeholder to replace with `shard(num_workers, worker_index)`.
     * </pre>
     *
     * <code>HINT = 3;</code>
     */
    public static final int HINT_VALUE = 3;
    /**
     * <pre>
     * OFF: No sharding will be performed.
     * </pre>
     *
     * <code>OFF = -1;</code>
     */
    public static final int OFF_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AutoShardPolicy valueOf(int value) {
      return forNumber(value);
    }

    public static AutoShardPolicy forNumber(int value) {
      switch (value) {
        case 0: return AUTO;
        case 1: return FILE;
        case 2: return DATA;
        case 3: return HINT;
        case -1: return OFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AutoShardPolicy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AutoShardPolicy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AutoShardPolicy>() {
            public AutoShardPolicy findValueByNumber(int number) {
              return AutoShardPolicy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.getDescriptor().getEnumTypes().get(0);
    }

    private static final AutoShardPolicy[] VALUES = values();

    public static AutoShardPolicy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AutoShardPolicy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.data.AutoShardPolicy)
  }

  /**
   * <pre>
   * Represents how to handle external state during serialization.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.data.ExternalStatePolicy}
   */
  public enum ExternalStatePolicy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>POLICY_WARN = 0;</code>
     */
    POLICY_WARN(0),
    /**
     * <code>POLICY_IGNORE = 1;</code>
     */
    POLICY_IGNORE(1),
    /**
     * <code>POLICY_FAIL = 2;</code>
     */
    POLICY_FAIL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>POLICY_WARN = 0;</code>
     */
    public static final int POLICY_WARN_VALUE = 0;
    /**
     * <code>POLICY_IGNORE = 1;</code>
     */
    public static final int POLICY_IGNORE_VALUE = 1;
    /**
     * <code>POLICY_FAIL = 2;</code>
     */
    public static final int POLICY_FAIL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ExternalStatePolicy valueOf(int value) {
      return forNumber(value);
    }

    public static ExternalStatePolicy forNumber(int value) {
      switch (value) {
        case 0: return POLICY_WARN;
        case 1: return POLICY_IGNORE;
        case 2: return POLICY_FAIL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExternalStatePolicy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ExternalStatePolicy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExternalStatePolicy>() {
            public ExternalStatePolicy findValueByNumber(int number) {
              return ExternalStatePolicy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.getDescriptor().getEnumTypes().get(1);
    }

    private static final ExternalStatePolicy[] VALUES = values();

    public static ExternalStatePolicy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ExternalStatePolicy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.data.ExternalStatePolicy)
  }

  public interface DistributeOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.DistributeOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
     */
    int getAutoShardPolicyValue();
    /**
     * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
     */
    tensorflow.data.DatasetOptions.AutoShardPolicy getAutoShardPolicy();

    /**
     * <code>int32 num_devices = 2;</code>
     */
    int getNumDevices();

    public tensorflow.data.DatasetOptions.DistributeOptions.OptionalNumDevicesCase getOptionalNumDevicesCase();
  }
  /**
   * Protobuf type {@code tensorflow.data.DistributeOptions}
   */
  public  static final class DistributeOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.DistributeOptions)
      DistributeOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DistributeOptions.newBuilder() to construct.
    private DistributeOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DistributeOptions() {
      autoShardPolicy_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DistributeOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DistributeOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              autoShardPolicy_ = rawValue;
              break;
            }
            case 16: {
              optionalNumDevicesCase_ = 2;
              optionalNumDevices_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.DistributeOptions.class, tensorflow.data.DatasetOptions.DistributeOptions.Builder.class);
    }

    private int optionalNumDevicesCase_ = 0;
    private java.lang.Object optionalNumDevices_;
    public enum OptionalNumDevicesCase
        implements com.google.protobuf.Internal.EnumLite {
      NUM_DEVICES(2),
      OPTIONALNUMDEVICES_NOT_SET(0);
      private final int value;
      private OptionalNumDevicesCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalNumDevicesCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalNumDevicesCase forNumber(int value) {
        switch (value) {
          case 2: return NUM_DEVICES;
          case 0: return OPTIONALNUMDEVICES_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalNumDevicesCase
    getOptionalNumDevicesCase() {
      return OptionalNumDevicesCase.forNumber(
          optionalNumDevicesCase_);
    }

    public static final int AUTO_SHARD_POLICY_FIELD_NUMBER = 1;
    private int autoShardPolicy_;
    /**
     * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
     */
    public int getAutoShardPolicyValue() {
      return autoShardPolicy_;
    }
    /**
     * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
     */
    public tensorflow.data.DatasetOptions.AutoShardPolicy getAutoShardPolicy() {
      @SuppressWarnings("deprecation")
      tensorflow.data.DatasetOptions.AutoShardPolicy result = tensorflow.data.DatasetOptions.AutoShardPolicy.valueOf(autoShardPolicy_);
      return result == null ? tensorflow.data.DatasetOptions.AutoShardPolicy.UNRECOGNIZED : result;
    }

    public static final int NUM_DEVICES_FIELD_NUMBER = 2;
    /**
     * <code>int32 num_devices = 2;</code>
     */
    public int getNumDevices() {
      if (optionalNumDevicesCase_ == 2) {
        return (java.lang.Integer) optionalNumDevices_;
      }
      return 0;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (autoShardPolicy_ != tensorflow.data.DatasetOptions.AutoShardPolicy.AUTO.getNumber()) {
        output.writeEnum(1, autoShardPolicy_);
      }
      if (optionalNumDevicesCase_ == 2) {
        output.writeInt32(
            2, (int)((java.lang.Integer) optionalNumDevices_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (autoShardPolicy_ != tensorflow.data.DatasetOptions.AutoShardPolicy.AUTO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, autoShardPolicy_);
      }
      if (optionalNumDevicesCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              2, (int)((java.lang.Integer) optionalNumDevices_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.DistributeOptions)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.DistributeOptions other = (tensorflow.data.DatasetOptions.DistributeOptions) obj;

      if (autoShardPolicy_ != other.autoShardPolicy_) return false;
      if (!getOptionalNumDevicesCase().equals(other.getOptionalNumDevicesCase())) return false;
      switch (optionalNumDevicesCase_) {
        case 2:
          if (getNumDevices()
              != other.getNumDevices()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUTO_SHARD_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + autoShardPolicy_;
      switch (optionalNumDevicesCase_) {
        case 2:
          hash = (37 * hash) + NUM_DEVICES_FIELD_NUMBER;
          hash = (53 * hash) + getNumDevices();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.DistributeOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.data.DistributeOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.DistributeOptions)
        tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.DistributeOptions.class, tensorflow.data.DatasetOptions.DistributeOptions.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.DistributeOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        autoShardPolicy_ = 0;

        optionalNumDevicesCase_ = 0;
        optionalNumDevices_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.DistributeOptions getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.DistributeOptions build() {
        tensorflow.data.DatasetOptions.DistributeOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.DistributeOptions buildPartial() {
        tensorflow.data.DatasetOptions.DistributeOptions result = new tensorflow.data.DatasetOptions.DistributeOptions(this);
        result.autoShardPolicy_ = autoShardPolicy_;
        if (optionalNumDevicesCase_ == 2) {
          result.optionalNumDevices_ = optionalNumDevices_;
        }
        result.optionalNumDevicesCase_ = optionalNumDevicesCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.DistributeOptions) {
          return mergeFrom((tensorflow.data.DatasetOptions.DistributeOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.DistributeOptions other) {
        if (other == tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance()) return this;
        if (other.autoShardPolicy_ != 0) {
          setAutoShardPolicyValue(other.getAutoShardPolicyValue());
        }
        switch (other.getOptionalNumDevicesCase()) {
          case NUM_DEVICES: {
            setNumDevices(other.getNumDevices());
            break;
          }
          case OPTIONALNUMDEVICES_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.data.DatasetOptions.DistributeOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.data.DatasetOptions.DistributeOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int optionalNumDevicesCase_ = 0;
      private java.lang.Object optionalNumDevices_;
      public OptionalNumDevicesCase
          getOptionalNumDevicesCase() {
        return OptionalNumDevicesCase.forNumber(
            optionalNumDevicesCase_);
      }

      public Builder clearOptionalNumDevices() {
        optionalNumDevicesCase_ = 0;
        optionalNumDevices_ = null;
        onChanged();
        return this;
      }


      private int autoShardPolicy_ = 0;
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       */
      public int getAutoShardPolicyValue() {
        return autoShardPolicy_;
      }
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       */
      public Builder setAutoShardPolicyValue(int value) {
        autoShardPolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       */
      public tensorflow.data.DatasetOptions.AutoShardPolicy getAutoShardPolicy() {
        @SuppressWarnings("deprecation")
        tensorflow.data.DatasetOptions.AutoShardPolicy result = tensorflow.data.DatasetOptions.AutoShardPolicy.valueOf(autoShardPolicy_);
        return result == null ? tensorflow.data.DatasetOptions.AutoShardPolicy.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       */
      public Builder setAutoShardPolicy(tensorflow.data.DatasetOptions.AutoShardPolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        autoShardPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       */
      public Builder clearAutoShardPolicy() {
        
        autoShardPolicy_ = 0;
        onChanged();
        return this;
      }

      /**
       * <code>int32 num_devices = 2;</code>
       */
      public int getNumDevices() {
        if (optionalNumDevicesCase_ == 2) {
          return (java.lang.Integer) optionalNumDevices_;
        }
        return 0;
      }
      /**
       * <code>int32 num_devices = 2;</code>
       */
      public Builder setNumDevices(int value) {
        optionalNumDevicesCase_ = 2;
        optionalNumDevices_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_devices = 2;</code>
       */
      public Builder clearNumDevices() {
        if (optionalNumDevicesCase_ == 2) {
          optionalNumDevicesCase_ = 0;
          optionalNumDevices_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.DistributeOptions)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.DistributeOptions)
    private static final tensorflow.data.DatasetOptions.DistributeOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.DistributeOptions();
    }

    public static tensorflow.data.DatasetOptions.DistributeOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DistributeOptions>
        PARSER = new com.google.protobuf.AbstractParser<DistributeOptions>() {
      @java.lang.Override
      public DistributeOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DistributeOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DistributeOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DistributeOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.DistributeOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapVectorizationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.MapVectorization)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool enabled = 1;</code>
     */
    boolean getEnabled();

    /**
     * <code>bool use_choose_fastest = 2;</code>
     */
    boolean getUseChooseFastest();

    public tensorflow.data.DatasetOptions.MapVectorization.OptionalEnabledCase getOptionalEnabledCase();

    public tensorflow.data.DatasetOptions.MapVectorization.OptionalUseChooseFastestCase getOptionalUseChooseFastestCase();
  }
  /**
   * Protobuf type {@code tensorflow.data.MapVectorization}
   */
  public  static final class MapVectorization extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.MapVectorization)
      MapVectorizationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapVectorization.newBuilder() to construct.
    private MapVectorization(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapVectorization() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MapVectorization();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapVectorization(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              optionalEnabledCase_ = 1;
              optionalEnabled_ = input.readBool();
              break;
            }
            case 16: {
              optionalUseChooseFastestCase_ = 2;
              optionalUseChooseFastest_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_MapVectorization_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_MapVectorization_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.MapVectorization.class, tensorflow.data.DatasetOptions.MapVectorization.Builder.class);
    }

    private int optionalEnabledCase_ = 0;
    private java.lang.Object optionalEnabled_;
    public enum OptionalEnabledCase
        implements com.google.protobuf.Internal.EnumLite {
      ENABLED(1),
      OPTIONALENABLED_NOT_SET(0);
      private final int value;
      private OptionalEnabledCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalEnabledCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalEnabledCase forNumber(int value) {
        switch (value) {
          case 1: return ENABLED;
          case 0: return OPTIONALENABLED_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalEnabledCase
    getOptionalEnabledCase() {
      return OptionalEnabledCase.forNumber(
          optionalEnabledCase_);
    }

    private int optionalUseChooseFastestCase_ = 0;
    private java.lang.Object optionalUseChooseFastest_;
    public enum OptionalUseChooseFastestCase
        implements com.google.protobuf.Internal.EnumLite {
      USE_CHOOSE_FASTEST(2),
      OPTIONALUSECHOOSEFASTEST_NOT_SET(0);
      private final int value;
      private OptionalUseChooseFastestCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalUseChooseFastestCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalUseChooseFastestCase forNumber(int value) {
        switch (value) {
          case 2: return USE_CHOOSE_FASTEST;
          case 0: return OPTIONALUSECHOOSEFASTEST_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalUseChooseFastestCase
    getOptionalUseChooseFastestCase() {
      return OptionalUseChooseFastestCase.forNumber(
          optionalUseChooseFastestCase_);
    }

    public static final int ENABLED_FIELD_NUMBER = 1;
    /**
     * <code>bool enabled = 1;</code>
     */
    public boolean getEnabled() {
      if (optionalEnabledCase_ == 1) {
        return (java.lang.Boolean) optionalEnabled_;
      }
      return false;
    }

    public static final int USE_CHOOSE_FASTEST_FIELD_NUMBER = 2;
    /**
     * <code>bool use_choose_fastest = 2;</code>
     */
    public boolean getUseChooseFastest() {
      if (optionalUseChooseFastestCase_ == 2) {
        return (java.lang.Boolean) optionalUseChooseFastest_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalEnabledCase_ == 1) {
        output.writeBool(
            1, (boolean)((java.lang.Boolean) optionalEnabled_));
      }
      if (optionalUseChooseFastestCase_ == 2) {
        output.writeBool(
            2, (boolean)((java.lang.Boolean) optionalUseChooseFastest_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalEnabledCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              1, (boolean)((java.lang.Boolean) optionalEnabled_));
      }
      if (optionalUseChooseFastestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              2, (boolean)((java.lang.Boolean) optionalUseChooseFastest_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.MapVectorization)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.MapVectorization other = (tensorflow.data.DatasetOptions.MapVectorization) obj;

      if (!getOptionalEnabledCase().equals(other.getOptionalEnabledCase())) return false;
      switch (optionalEnabledCase_) {
        case 1:
          if (getEnabled()
              != other.getEnabled()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalUseChooseFastestCase().equals(other.getOptionalUseChooseFastestCase())) return false;
      switch (optionalUseChooseFastestCase_) {
        case 2:
          if (getUseChooseFastest()
              != other.getUseChooseFastest()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (optionalEnabledCase_) {
        case 1:
          hash = (37 * hash) + ENABLED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getEnabled());
          break;
        case 0:
        default:
      }
      switch (optionalUseChooseFastestCase_) {
        case 2:
          hash = (37 * hash) + USE_CHOOSE_FASTEST_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUseChooseFastest());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.MapVectorization parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.MapVectorization prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.data.MapVectorization}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.MapVectorization)
        tensorflow.data.DatasetOptions.MapVectorizationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_MapVectorization_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_MapVectorization_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.MapVectorization.class, tensorflow.data.DatasetOptions.MapVectorization.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.MapVectorization.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        optionalEnabledCase_ = 0;
        optionalEnabled_ = null;
        optionalUseChooseFastestCase_ = 0;
        optionalUseChooseFastest_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_MapVectorization_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.MapVectorization getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.MapVectorization.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.MapVectorization build() {
        tensorflow.data.DatasetOptions.MapVectorization result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.MapVectorization buildPartial() {
        tensorflow.data.DatasetOptions.MapVectorization result = new tensorflow.data.DatasetOptions.MapVectorization(this);
        if (optionalEnabledCase_ == 1) {
          result.optionalEnabled_ = optionalEnabled_;
        }
        if (optionalUseChooseFastestCase_ == 2) {
          result.optionalUseChooseFastest_ = optionalUseChooseFastest_;
        }
        result.optionalEnabledCase_ = optionalEnabledCase_;
        result.optionalUseChooseFastestCase_ = optionalUseChooseFastestCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.MapVectorization) {
          return mergeFrom((tensorflow.data.DatasetOptions.MapVectorization)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.MapVectorization other) {
        if (other == tensorflow.data.DatasetOptions.MapVectorization.getDefaultInstance()) return this;
        switch (other.getOptionalEnabledCase()) {
          case ENABLED: {
            setEnabled(other.getEnabled());
            break;
          }
          case OPTIONALENABLED_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalUseChooseFastestCase()) {
          case USE_CHOOSE_FASTEST: {
            setUseChooseFastest(other.getUseChooseFastest());
            break;
          }
          case OPTIONALUSECHOOSEFASTEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.data.DatasetOptions.MapVectorization parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.data.DatasetOptions.MapVectorization) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int optionalEnabledCase_ = 0;
      private java.lang.Object optionalEnabled_;
      public OptionalEnabledCase
          getOptionalEnabledCase() {
        return OptionalEnabledCase.forNumber(
            optionalEnabledCase_);
      }

      public Builder clearOptionalEnabled() {
        optionalEnabledCase_ = 0;
        optionalEnabled_ = null;
        onChanged();
        return this;
      }

      private int optionalUseChooseFastestCase_ = 0;
      private java.lang.Object optionalUseChooseFastest_;
      public OptionalUseChooseFastestCase
          getOptionalUseChooseFastestCase() {
        return OptionalUseChooseFastestCase.forNumber(
            optionalUseChooseFastestCase_);
      }

      public Builder clearOptionalUseChooseFastest() {
        optionalUseChooseFastestCase_ = 0;
        optionalUseChooseFastest_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>bool enabled = 1;</code>
       */
      public boolean getEnabled() {
        if (optionalEnabledCase_ == 1) {
          return (java.lang.Boolean) optionalEnabled_;
        }
        return false;
      }
      /**
       * <code>bool enabled = 1;</code>
       */
      public Builder setEnabled(boolean value) {
        optionalEnabledCase_ = 1;
        optionalEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool enabled = 1;</code>
       */
      public Builder clearEnabled() {
        if (optionalEnabledCase_ == 1) {
          optionalEnabledCase_ = 0;
          optionalEnabled_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool use_choose_fastest = 2;</code>
       */
      public boolean getUseChooseFastest() {
        if (optionalUseChooseFastestCase_ == 2) {
          return (java.lang.Boolean) optionalUseChooseFastest_;
        }
        return false;
      }
      /**
       * <code>bool use_choose_fastest = 2;</code>
       */
      public Builder setUseChooseFastest(boolean value) {
        optionalUseChooseFastestCase_ = 2;
        optionalUseChooseFastest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool use_choose_fastest = 2;</code>
       */
      public Builder clearUseChooseFastest() {
        if (optionalUseChooseFastestCase_ == 2) {
          optionalUseChooseFastestCase_ = 0;
          optionalUseChooseFastest_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.MapVectorization)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.MapVectorization)
    private static final tensorflow.data.DatasetOptions.MapVectorization DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.MapVectorization();
    }

    public static tensorflow.data.DatasetOptions.MapVectorization getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapVectorization>
        PARSER = new com.google.protobuf.AbstractParser<MapVectorization>() {
      @java.lang.Override
      public MapVectorization parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapVectorization(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapVectorization> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MapVectorization> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.MapVectorization getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptimizationOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.OptimizationOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool apply_default_optimizations = 1;</code>
     */
    boolean getApplyDefaultOptimizations();

    /**
     * <code>bool autotune = 2;</code>
     */
    boolean getAutotune();

    /**
     * <code>bool autotune_buffers = 3;</code>
     */
    boolean getAutotuneBuffers();

    /**
     * <code>int32 autotune_cpu_budget = 4;</code>
     */
    int getAutotuneCpuBudget();

    /**
     * <code>int32 autotune_ram_budget = 5;</code>
     */
    int getAutotuneRamBudget();

    /**
     * <code>bool filter_fusion = 6;</code>
     */
    boolean getFilterFusion();

    /**
     * <code>bool filter_with_random_uniform_fusion = 7;</code>
     */
    boolean getFilterWithRandomUniformFusion();

    /**
     * <code>bool hoist_random_uniform = 8;</code>
     */
    boolean getHoistRandomUniform();

    /**
     * <code>bool map_and_batch_fusion = 9;</code>
     */
    boolean getMapAndBatchFusion();

    /**
     * <code>bool map_and_filter_fusion = 10;</code>
     */
    boolean getMapAndFilterFusion();

    /**
     * <code>bool map_fusion = 11;</code>
     */
    boolean getMapFusion();

    /**
     * <code>bool map_parallelization = 12;</code>
     */
    boolean getMapParallelization();

    /**
     * <pre>
     * The map vectorization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
     */
    boolean hasMapVectorization();
    /**
     * <pre>
     * The map vectorization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
     */
    tensorflow.data.DatasetOptions.MapVectorization getMapVectorization();
    /**
     * <pre>
     * The map vectorization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
     */
    tensorflow.data.DatasetOptions.MapVectorizationOrBuilder getMapVectorizationOrBuilder();

    /**
     * <code>bool noop_elimination = 14;</code>
     */
    boolean getNoopElimination();

    /**
     * <code>bool parallel_batch = 15;</code>
     */
    boolean getParallelBatch();

    /**
     * <code>bool reorder_data_discarding_ops = 16;</code>
     */
    boolean getReorderDataDiscardingOps();

    /**
     * <code>bool shuffle_and_repeat_fusion = 17;</code>
     */
    boolean getShuffleAndRepeatFusion();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalApplyDefaultOptimizationsCase getOptionalApplyDefaultOptimizationsCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalAutotuneCase getOptionalAutotuneCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalAutotuneBuffersCase getOptionalAutotuneBuffersCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalAutotuneCpuBudgetCase getOptionalAutotuneCpuBudgetCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalAutotuneRamBudgetCase getOptionalAutotuneRamBudgetCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalFilterFusionCase getOptionalFilterFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalFilterWithRandomUniformFusionCase getOptionalFilterWithRandomUniformFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalHoistRandomUniformCase getOptionalHoistRandomUniformCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalMapAndBatchFusionCase getOptionalMapAndBatchFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalMapAndFilterFusionCase getOptionalMapAndFilterFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalMapFusionCase getOptionalMapFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalMapParallelizationCase getOptionalMapParallelizationCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalNoopEliminationCase getOptionalNoopEliminationCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalParallelBatchCase getOptionalParallelBatchCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalReorderDataDiscardingOpsCase getOptionalReorderDataDiscardingOpsCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalShuffleAndRepeatFusionCase getOptionalShuffleAndRepeatFusionCase();
  }
  /**
   * Protobuf type {@code tensorflow.data.OptimizationOptions}
   */
  public  static final class OptimizationOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.OptimizationOptions)
      OptimizationOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OptimizationOptions.newBuilder() to construct.
    private OptimizationOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OptimizationOptions() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OptimizationOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OptimizationOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              optionalApplyDefaultOptimizationsCase_ = 1;
              optionalApplyDefaultOptimizations_ = input.readBool();
              break;
            }
            case 16: {
              optionalAutotuneCase_ = 2;
              optionalAutotune_ = input.readBool();
              break;
            }
            case 24: {
              optionalAutotuneBuffersCase_ = 3;
              optionalAutotuneBuffers_ = input.readBool();
              break;
            }
            case 32: {
              optionalAutotuneCpuBudgetCase_ = 4;
              optionalAutotuneCpuBudget_ = input.readInt32();
              break;
            }
            case 40: {
              optionalAutotuneRamBudgetCase_ = 5;
              optionalAutotuneRamBudget_ = input.readInt32();
              break;
            }
            case 48: {
              optionalFilterFusionCase_ = 6;
              optionalFilterFusion_ = input.readBool();
              break;
            }
            case 56: {
              optionalFilterWithRandomUniformFusionCase_ = 7;
              optionalFilterWithRandomUniformFusion_ = input.readBool();
              break;
            }
            case 64: {
              optionalHoistRandomUniformCase_ = 8;
              optionalHoistRandomUniform_ = input.readBool();
              break;
            }
            case 72: {
              optionalMapAndBatchFusionCase_ = 9;
              optionalMapAndBatchFusion_ = input.readBool();
              break;
            }
            case 80: {
              optionalMapAndFilterFusionCase_ = 10;
              optionalMapAndFilterFusion_ = input.readBool();
              break;
            }
            case 88: {
              optionalMapFusionCase_ = 11;
              optionalMapFusion_ = input.readBool();
              break;
            }
            case 96: {
              optionalMapParallelizationCase_ = 12;
              optionalMapParallelization_ = input.readBool();
              break;
            }
            case 106: {
              tensorflow.data.DatasetOptions.MapVectorization.Builder subBuilder = null;
              if (mapVectorization_ != null) {
                subBuilder = mapVectorization_.toBuilder();
              }
              mapVectorization_ = input.readMessage(tensorflow.data.DatasetOptions.MapVectorization.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mapVectorization_);
                mapVectorization_ = subBuilder.buildPartial();
              }

              break;
            }
            case 112: {
              optionalNoopEliminationCase_ = 14;
              optionalNoopElimination_ = input.readBool();
              break;
            }
            case 120: {
              optionalParallelBatchCase_ = 15;
              optionalParallelBatch_ = input.readBool();
              break;
            }
            case 128: {
              optionalReorderDataDiscardingOpsCase_ = 16;
              optionalReorderDataDiscardingOps_ = input.readBool();
              break;
            }
            case 136: {
              optionalShuffleAndRepeatFusionCase_ = 17;
              optionalShuffleAndRepeatFusion_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.OptimizationOptions.class, tensorflow.data.DatasetOptions.OptimizationOptions.Builder.class);
    }

    private int optionalApplyDefaultOptimizationsCase_ = 0;
    private java.lang.Object optionalApplyDefaultOptimizations_;
    public enum OptionalApplyDefaultOptimizationsCase
        implements com.google.protobuf.Internal.EnumLite {
      APPLY_DEFAULT_OPTIMIZATIONS(1),
      OPTIONALAPPLYDEFAULTOPTIMIZATIONS_NOT_SET(0);
      private final int value;
      private OptionalApplyDefaultOptimizationsCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalApplyDefaultOptimizationsCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalApplyDefaultOptimizationsCase forNumber(int value) {
        switch (value) {
          case 1: return APPLY_DEFAULT_OPTIMIZATIONS;
          case 0: return OPTIONALAPPLYDEFAULTOPTIMIZATIONS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalApplyDefaultOptimizationsCase
    getOptionalApplyDefaultOptimizationsCase() {
      return OptionalApplyDefaultOptimizationsCase.forNumber(
          optionalApplyDefaultOptimizationsCase_);
    }

    private int optionalAutotuneCase_ = 0;
    private java.lang.Object optionalAutotune_;
    public enum OptionalAutotuneCase
        implements com.google.protobuf.Internal.EnumLite {
      AUTOTUNE(2),
      OPTIONALAUTOTUNE_NOT_SET(0);
      private final int value;
      private OptionalAutotuneCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalAutotuneCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalAutotuneCase forNumber(int value) {
        switch (value) {
          case 2: return AUTOTUNE;
          case 0: return OPTIONALAUTOTUNE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalAutotuneCase
    getOptionalAutotuneCase() {
      return OptionalAutotuneCase.forNumber(
          optionalAutotuneCase_);
    }

    private int optionalAutotuneBuffersCase_ = 0;
    private java.lang.Object optionalAutotuneBuffers_;
    public enum OptionalAutotuneBuffersCase
        implements com.google.protobuf.Internal.EnumLite {
      AUTOTUNE_BUFFERS(3),
      OPTIONALAUTOTUNEBUFFERS_NOT_SET(0);
      private final int value;
      private OptionalAutotuneBuffersCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalAutotuneBuffersCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalAutotuneBuffersCase forNumber(int value) {
        switch (value) {
          case 3: return AUTOTUNE_BUFFERS;
          case 0: return OPTIONALAUTOTUNEBUFFERS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalAutotuneBuffersCase
    getOptionalAutotuneBuffersCase() {
      return OptionalAutotuneBuffersCase.forNumber(
          optionalAutotuneBuffersCase_);
    }

    private int optionalAutotuneCpuBudgetCase_ = 0;
    private java.lang.Object optionalAutotuneCpuBudget_;
    public enum OptionalAutotuneCpuBudgetCase
        implements com.google.protobuf.Internal.EnumLite {
      AUTOTUNE_CPU_BUDGET(4),
      OPTIONALAUTOTUNECPUBUDGET_NOT_SET(0);
      private final int value;
      private OptionalAutotuneCpuBudgetCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalAutotuneCpuBudgetCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalAutotuneCpuBudgetCase forNumber(int value) {
        switch (value) {
          case 4: return AUTOTUNE_CPU_BUDGET;
          case 0: return OPTIONALAUTOTUNECPUBUDGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalAutotuneCpuBudgetCase
    getOptionalAutotuneCpuBudgetCase() {
      return OptionalAutotuneCpuBudgetCase.forNumber(
          optionalAutotuneCpuBudgetCase_);
    }

    private int optionalAutotuneRamBudgetCase_ = 0;
    private java.lang.Object optionalAutotuneRamBudget_;
    public enum OptionalAutotuneRamBudgetCase
        implements com.google.protobuf.Internal.EnumLite {
      AUTOTUNE_RAM_BUDGET(5),
      OPTIONALAUTOTUNERAMBUDGET_NOT_SET(0);
      private final int value;
      private OptionalAutotuneRamBudgetCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalAutotuneRamBudgetCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalAutotuneRamBudgetCase forNumber(int value) {
        switch (value) {
          case 5: return AUTOTUNE_RAM_BUDGET;
          case 0: return OPTIONALAUTOTUNERAMBUDGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalAutotuneRamBudgetCase
    getOptionalAutotuneRamBudgetCase() {
      return OptionalAutotuneRamBudgetCase.forNumber(
          optionalAutotuneRamBudgetCase_);
    }

    private int optionalFilterFusionCase_ = 0;
    private java.lang.Object optionalFilterFusion_;
    public enum OptionalFilterFusionCase
        implements com.google.protobuf.Internal.EnumLite {
      FILTER_FUSION(6),
      OPTIONALFILTERFUSION_NOT_SET(0);
      private final int value;
      private OptionalFilterFusionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalFilterFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalFilterFusionCase forNumber(int value) {
        switch (value) {
          case 6: return FILTER_FUSION;
          case 0: return OPTIONALFILTERFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalFilterFusionCase
    getOptionalFilterFusionCase() {
      return OptionalFilterFusionCase.forNumber(
          optionalFilterFusionCase_);
    }

    private int optionalFilterWithRandomUniformFusionCase_ = 0;
    private java.lang.Object optionalFilterWithRandomUniformFusion_;
    public enum OptionalFilterWithRandomUniformFusionCase
        implements com.google.protobuf.Internal.EnumLite {
      FILTER_WITH_RANDOM_UNIFORM_FUSION(7),
      OPTIONALFILTERWITHRANDOMUNIFORMFUSION_NOT_SET(0);
      private final int value;
      private OptionalFilterWithRandomUniformFusionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalFilterWithRandomUniformFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalFilterWithRandomUniformFusionCase forNumber(int value) {
        switch (value) {
          case 7: return FILTER_WITH_RANDOM_UNIFORM_FUSION;
          case 0: return OPTIONALFILTERWITHRANDOMUNIFORMFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalFilterWithRandomUniformFusionCase
    getOptionalFilterWithRandomUniformFusionCase() {
      return OptionalFilterWithRandomUniformFusionCase.forNumber(
          optionalFilterWithRandomUniformFusionCase_);
    }

    private int optionalHoistRandomUniformCase_ = 0;
    private java.lang.Object optionalHoistRandomUniform_;
    public enum OptionalHoistRandomUniformCase
        implements com.google.protobuf.Internal.EnumLite {
      HOIST_RANDOM_UNIFORM(8),
      OPTIONALHOISTRANDOMUNIFORM_NOT_SET(0);
      private final int value;
      private OptionalHoistRandomUniformCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalHoistRandomUniformCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalHoistRandomUniformCase forNumber(int value) {
        switch (value) {
          case 8: return HOIST_RANDOM_UNIFORM;
          case 0: return OPTIONALHOISTRANDOMUNIFORM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalHoistRandomUniformCase
    getOptionalHoistRandomUniformCase() {
      return OptionalHoistRandomUniformCase.forNumber(
          optionalHoistRandomUniformCase_);
    }

    private int optionalMapAndBatchFusionCase_ = 0;
    private java.lang.Object optionalMapAndBatchFusion_;
    public enum OptionalMapAndBatchFusionCase
        implements com.google.protobuf.Internal.EnumLite {
      MAP_AND_BATCH_FUSION(9),
      OPTIONALMAPANDBATCHFUSION_NOT_SET(0);
      private final int value;
      private OptionalMapAndBatchFusionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMapAndBatchFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMapAndBatchFusionCase forNumber(int value) {
        switch (value) {
          case 9: return MAP_AND_BATCH_FUSION;
          case 0: return OPTIONALMAPANDBATCHFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMapAndBatchFusionCase
    getOptionalMapAndBatchFusionCase() {
      return OptionalMapAndBatchFusionCase.forNumber(
          optionalMapAndBatchFusionCase_);
    }

    private int optionalMapAndFilterFusionCase_ = 0;
    private java.lang.Object optionalMapAndFilterFusion_;
    public enum OptionalMapAndFilterFusionCase
        implements com.google.protobuf.Internal.EnumLite {
      MAP_AND_FILTER_FUSION(10),
      OPTIONALMAPANDFILTERFUSION_NOT_SET(0);
      private final int value;
      private OptionalMapAndFilterFusionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMapAndFilterFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMapAndFilterFusionCase forNumber(int value) {
        switch (value) {
          case 10: return MAP_AND_FILTER_FUSION;
          case 0: return OPTIONALMAPANDFILTERFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMapAndFilterFusionCase
    getOptionalMapAndFilterFusionCase() {
      return OptionalMapAndFilterFusionCase.forNumber(
          optionalMapAndFilterFusionCase_);
    }

    private int optionalMapFusionCase_ = 0;
    private java.lang.Object optionalMapFusion_;
    public enum OptionalMapFusionCase
        implements com.google.protobuf.Internal.EnumLite {
      MAP_FUSION(11),
      OPTIONALMAPFUSION_NOT_SET(0);
      private final int value;
      private OptionalMapFusionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMapFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMapFusionCase forNumber(int value) {
        switch (value) {
          case 11: return MAP_FUSION;
          case 0: return OPTIONALMAPFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMapFusionCase
    getOptionalMapFusionCase() {
      return OptionalMapFusionCase.forNumber(
          optionalMapFusionCase_);
    }

    private int optionalMapParallelizationCase_ = 0;
    private java.lang.Object optionalMapParallelization_;
    public enum OptionalMapParallelizationCase
        implements com.google.protobuf.Internal.EnumLite {
      MAP_PARALLELIZATION(12),
      OPTIONALMAPPARALLELIZATION_NOT_SET(0);
      private final int value;
      private OptionalMapParallelizationCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMapParallelizationCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMapParallelizationCase forNumber(int value) {
        switch (value) {
          case 12: return MAP_PARALLELIZATION;
          case 0: return OPTIONALMAPPARALLELIZATION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMapParallelizationCase
    getOptionalMapParallelizationCase() {
      return OptionalMapParallelizationCase.forNumber(
          optionalMapParallelizationCase_);
    }

    private int optionalNoopEliminationCase_ = 0;
    private java.lang.Object optionalNoopElimination_;
    public enum OptionalNoopEliminationCase
        implements com.google.protobuf.Internal.EnumLite {
      NOOP_ELIMINATION(14),
      OPTIONALNOOPELIMINATION_NOT_SET(0);
      private final int value;
      private OptionalNoopEliminationCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalNoopEliminationCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalNoopEliminationCase forNumber(int value) {
        switch (value) {
          case 14: return NOOP_ELIMINATION;
          case 0: return OPTIONALNOOPELIMINATION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalNoopEliminationCase
    getOptionalNoopEliminationCase() {
      return OptionalNoopEliminationCase.forNumber(
          optionalNoopEliminationCase_);
    }

    private int optionalParallelBatchCase_ = 0;
    private java.lang.Object optionalParallelBatch_;
    public enum OptionalParallelBatchCase
        implements com.google.protobuf.Internal.EnumLite {
      PARALLEL_BATCH(15),
      OPTIONALPARALLELBATCH_NOT_SET(0);
      private final int value;
      private OptionalParallelBatchCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalParallelBatchCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalParallelBatchCase forNumber(int value) {
        switch (value) {
          case 15: return PARALLEL_BATCH;
          case 0: return OPTIONALPARALLELBATCH_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalParallelBatchCase
    getOptionalParallelBatchCase() {
      return OptionalParallelBatchCase.forNumber(
          optionalParallelBatchCase_);
    }

    private int optionalReorderDataDiscardingOpsCase_ = 0;
    private java.lang.Object optionalReorderDataDiscardingOps_;
    public enum OptionalReorderDataDiscardingOpsCase
        implements com.google.protobuf.Internal.EnumLite {
      REORDER_DATA_DISCARDING_OPS(16),
      OPTIONALREORDERDATADISCARDINGOPS_NOT_SET(0);
      private final int value;
      private OptionalReorderDataDiscardingOpsCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalReorderDataDiscardingOpsCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalReorderDataDiscardingOpsCase forNumber(int value) {
        switch (value) {
          case 16: return REORDER_DATA_DISCARDING_OPS;
          case 0: return OPTIONALREORDERDATADISCARDINGOPS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalReorderDataDiscardingOpsCase
    getOptionalReorderDataDiscardingOpsCase() {
      return OptionalReorderDataDiscardingOpsCase.forNumber(
          optionalReorderDataDiscardingOpsCase_);
    }

    private int optionalShuffleAndRepeatFusionCase_ = 0;
    private java.lang.Object optionalShuffleAndRepeatFusion_;
    public enum OptionalShuffleAndRepeatFusionCase
        implements com.google.protobuf.Internal.EnumLite {
      SHUFFLE_AND_REPEAT_FUSION(17),
      OPTIONALSHUFFLEANDREPEATFUSION_NOT_SET(0);
      private final int value;
      private OptionalShuffleAndRepeatFusionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalShuffleAndRepeatFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalShuffleAndRepeatFusionCase forNumber(int value) {
        switch (value) {
          case 17: return SHUFFLE_AND_REPEAT_FUSION;
          case 0: return OPTIONALSHUFFLEANDREPEATFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalShuffleAndRepeatFusionCase
    getOptionalShuffleAndRepeatFusionCase() {
      return OptionalShuffleAndRepeatFusionCase.forNumber(
          optionalShuffleAndRepeatFusionCase_);
    }

    public static final int APPLY_DEFAULT_OPTIMIZATIONS_FIELD_NUMBER = 1;
    /**
     * <code>bool apply_default_optimizations = 1;</code>
     */
    public boolean getApplyDefaultOptimizations() {
      if (optionalApplyDefaultOptimizationsCase_ == 1) {
        return (java.lang.Boolean) optionalApplyDefaultOptimizations_;
      }
      return false;
    }

    public static final int AUTOTUNE_FIELD_NUMBER = 2;
    /**
     * <code>bool autotune = 2;</code>
     */
    public boolean getAutotune() {
      if (optionalAutotuneCase_ == 2) {
        return (java.lang.Boolean) optionalAutotune_;
      }
      return false;
    }

    public static final int AUTOTUNE_BUFFERS_FIELD_NUMBER = 3;
    /**
     * <code>bool autotune_buffers = 3;</code>
     */
    public boolean getAutotuneBuffers() {
      if (optionalAutotuneBuffersCase_ == 3) {
        return (java.lang.Boolean) optionalAutotuneBuffers_;
      }
      return false;
    }

    public static final int AUTOTUNE_CPU_BUDGET_FIELD_NUMBER = 4;
    /**
     * <code>int32 autotune_cpu_budget = 4;</code>
     */
    public int getAutotuneCpuBudget() {
      if (optionalAutotuneCpuBudgetCase_ == 4) {
        return (java.lang.Integer) optionalAutotuneCpuBudget_;
      }
      return 0;
    }

    public static final int AUTOTUNE_RAM_BUDGET_FIELD_NUMBER = 5;
    /**
     * <code>int32 autotune_ram_budget = 5;</code>
     */
    public int getAutotuneRamBudget() {
      if (optionalAutotuneRamBudgetCase_ == 5) {
        return (java.lang.Integer) optionalAutotuneRamBudget_;
      }
      return 0;
    }

    public static final int FILTER_FUSION_FIELD_NUMBER = 6;
    /**
     * <code>bool filter_fusion = 6;</code>
     */
    public boolean getFilterFusion() {
      if (optionalFilterFusionCase_ == 6) {
        return (java.lang.Boolean) optionalFilterFusion_;
      }
      return false;
    }

    public static final int FILTER_WITH_RANDOM_UNIFORM_FUSION_FIELD_NUMBER = 7;
    /**
     * <code>bool filter_with_random_uniform_fusion = 7;</code>
     */
    public boolean getFilterWithRandomUniformFusion() {
      if (optionalFilterWithRandomUniformFusionCase_ == 7) {
        return (java.lang.Boolean) optionalFilterWithRandomUniformFusion_;
      }
      return false;
    }

    public static final int HOIST_RANDOM_UNIFORM_FIELD_NUMBER = 8;
    /**
     * <code>bool hoist_random_uniform = 8;</code>
     */
    public boolean getHoistRandomUniform() {
      if (optionalHoistRandomUniformCase_ == 8) {
        return (java.lang.Boolean) optionalHoistRandomUniform_;
      }
      return false;
    }

    public static final int MAP_AND_BATCH_FUSION_FIELD_NUMBER = 9;
    /**
     * <code>bool map_and_batch_fusion = 9;</code>
     */
    public boolean getMapAndBatchFusion() {
      if (optionalMapAndBatchFusionCase_ == 9) {
        return (java.lang.Boolean) optionalMapAndBatchFusion_;
      }
      return false;
    }

    public static final int MAP_AND_FILTER_FUSION_FIELD_NUMBER = 10;
    /**
     * <code>bool map_and_filter_fusion = 10;</code>
     */
    public boolean getMapAndFilterFusion() {
      if (optionalMapAndFilterFusionCase_ == 10) {
        return (java.lang.Boolean) optionalMapAndFilterFusion_;
      }
      return false;
    }

    public static final int MAP_FUSION_FIELD_NUMBER = 11;
    /**
     * <code>bool map_fusion = 11;</code>
     */
    public boolean getMapFusion() {
      if (optionalMapFusionCase_ == 11) {
        return (java.lang.Boolean) optionalMapFusion_;
      }
      return false;
    }

    public static final int MAP_PARALLELIZATION_FIELD_NUMBER = 12;
    /**
     * <code>bool map_parallelization = 12;</code>
     */
    public boolean getMapParallelization() {
      if (optionalMapParallelizationCase_ == 12) {
        return (java.lang.Boolean) optionalMapParallelization_;
      }
      return false;
    }

    public static final int MAP_VECTORIZATION_FIELD_NUMBER = 13;
    private tensorflow.data.DatasetOptions.MapVectorization mapVectorization_;
    /**
     * <pre>
     * The map vectorization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
     */
    public boolean hasMapVectorization() {
      return mapVectorization_ != null;
    }
    /**
     * <pre>
     * The map vectorization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
     */
    public tensorflow.data.DatasetOptions.MapVectorization getMapVectorization() {
      return mapVectorization_ == null ? tensorflow.data.DatasetOptions.MapVectorization.getDefaultInstance() : mapVectorization_;
    }
    /**
     * <pre>
     * The map vectorization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
     */
    public tensorflow.data.DatasetOptions.MapVectorizationOrBuilder getMapVectorizationOrBuilder() {
      return getMapVectorization();
    }

    public static final int NOOP_ELIMINATION_FIELD_NUMBER = 14;
    /**
     * <code>bool noop_elimination = 14;</code>
     */
    public boolean getNoopElimination() {
      if (optionalNoopEliminationCase_ == 14) {
        return (java.lang.Boolean) optionalNoopElimination_;
      }
      return false;
    }

    public static final int PARALLEL_BATCH_FIELD_NUMBER = 15;
    /**
     * <code>bool parallel_batch = 15;</code>
     */
    public boolean getParallelBatch() {
      if (optionalParallelBatchCase_ == 15) {
        return (java.lang.Boolean) optionalParallelBatch_;
      }
      return false;
    }

    public static final int REORDER_DATA_DISCARDING_OPS_FIELD_NUMBER = 16;
    /**
     * <code>bool reorder_data_discarding_ops = 16;</code>
     */
    public boolean getReorderDataDiscardingOps() {
      if (optionalReorderDataDiscardingOpsCase_ == 16) {
        return (java.lang.Boolean) optionalReorderDataDiscardingOps_;
      }
      return false;
    }

    public static final int SHUFFLE_AND_REPEAT_FUSION_FIELD_NUMBER = 17;
    /**
     * <code>bool shuffle_and_repeat_fusion = 17;</code>
     */
    public boolean getShuffleAndRepeatFusion() {
      if (optionalShuffleAndRepeatFusionCase_ == 17) {
        return (java.lang.Boolean) optionalShuffleAndRepeatFusion_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalApplyDefaultOptimizationsCase_ == 1) {
        output.writeBool(
            1, (boolean)((java.lang.Boolean) optionalApplyDefaultOptimizations_));
      }
      if (optionalAutotuneCase_ == 2) {
        output.writeBool(
            2, (boolean)((java.lang.Boolean) optionalAutotune_));
      }
      if (optionalAutotuneBuffersCase_ == 3) {
        output.writeBool(
            3, (boolean)((java.lang.Boolean) optionalAutotuneBuffers_));
      }
      if (optionalAutotuneCpuBudgetCase_ == 4) {
        output.writeInt32(
            4, (int)((java.lang.Integer) optionalAutotuneCpuBudget_));
      }
      if (optionalAutotuneRamBudgetCase_ == 5) {
        output.writeInt32(
            5, (int)((java.lang.Integer) optionalAutotuneRamBudget_));
      }
      if (optionalFilterFusionCase_ == 6) {
        output.writeBool(
            6, (boolean)((java.lang.Boolean) optionalFilterFusion_));
      }
      if (optionalFilterWithRandomUniformFusionCase_ == 7) {
        output.writeBool(
            7, (boolean)((java.lang.Boolean) optionalFilterWithRandomUniformFusion_));
      }
      if (optionalHoistRandomUniformCase_ == 8) {
        output.writeBool(
            8, (boolean)((java.lang.Boolean) optionalHoistRandomUniform_));
      }
      if (optionalMapAndBatchFusionCase_ == 9) {
        output.writeBool(
            9, (boolean)((java.lang.Boolean) optionalMapAndBatchFusion_));
      }
      if (optionalMapAndFilterFusionCase_ == 10) {
        output.writeBool(
            10, (boolean)((java.lang.Boolean) optionalMapAndFilterFusion_));
      }
      if (optionalMapFusionCase_ == 11) {
        output.writeBool(
            11, (boolean)((java.lang.Boolean) optionalMapFusion_));
      }
      if (optionalMapParallelizationCase_ == 12) {
        output.writeBool(
            12, (boolean)((java.lang.Boolean) optionalMapParallelization_));
      }
      if (mapVectorization_ != null) {
        output.writeMessage(13, getMapVectorization());
      }
      if (optionalNoopEliminationCase_ == 14) {
        output.writeBool(
            14, (boolean)((java.lang.Boolean) optionalNoopElimination_));
      }
      if (optionalParallelBatchCase_ == 15) {
        output.writeBool(
            15, (boolean)((java.lang.Boolean) optionalParallelBatch_));
      }
      if (optionalReorderDataDiscardingOpsCase_ == 16) {
        output.writeBool(
            16, (boolean)((java.lang.Boolean) optionalReorderDataDiscardingOps_));
      }
      if (optionalShuffleAndRepeatFusionCase_ == 17) {
        output.writeBool(
            17, (boolean)((java.lang.Boolean) optionalShuffleAndRepeatFusion_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalApplyDefaultOptimizationsCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              1, (boolean)((java.lang.Boolean) optionalApplyDefaultOptimizations_));
      }
      if (optionalAutotuneCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              2, (boolean)((java.lang.Boolean) optionalAutotune_));
      }
      if (optionalAutotuneBuffersCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              3, (boolean)((java.lang.Boolean) optionalAutotuneBuffers_));
      }
      if (optionalAutotuneCpuBudgetCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              4, (int)((java.lang.Integer) optionalAutotuneCpuBudget_));
      }
      if (optionalAutotuneRamBudgetCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              5, (int)((java.lang.Integer) optionalAutotuneRamBudget_));
      }
      if (optionalFilterFusionCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              6, (boolean)((java.lang.Boolean) optionalFilterFusion_));
      }
      if (optionalFilterWithRandomUniformFusionCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              7, (boolean)((java.lang.Boolean) optionalFilterWithRandomUniformFusion_));
      }
      if (optionalHoistRandomUniformCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              8, (boolean)((java.lang.Boolean) optionalHoistRandomUniform_));
      }
      if (optionalMapAndBatchFusionCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              9, (boolean)((java.lang.Boolean) optionalMapAndBatchFusion_));
      }
      if (optionalMapAndFilterFusionCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              10, (boolean)((java.lang.Boolean) optionalMapAndFilterFusion_));
      }
      if (optionalMapFusionCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              11, (boolean)((java.lang.Boolean) optionalMapFusion_));
      }
      if (optionalMapParallelizationCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              12, (boolean)((java.lang.Boolean) optionalMapParallelization_));
      }
      if (mapVectorization_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getMapVectorization());
      }
      if (optionalNoopEliminationCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              14, (boolean)((java.lang.Boolean) optionalNoopElimination_));
      }
      if (optionalParallelBatchCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              15, (boolean)((java.lang.Boolean) optionalParallelBatch_));
      }
      if (optionalReorderDataDiscardingOpsCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              16, (boolean)((java.lang.Boolean) optionalReorderDataDiscardingOps_));
      }
      if (optionalShuffleAndRepeatFusionCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              17, (boolean)((java.lang.Boolean) optionalShuffleAndRepeatFusion_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.OptimizationOptions)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.OptimizationOptions other = (tensorflow.data.DatasetOptions.OptimizationOptions) obj;

      if (hasMapVectorization() != other.hasMapVectorization()) return false;
      if (hasMapVectorization()) {
        if (!getMapVectorization()
            .equals(other.getMapVectorization())) return false;
      }
      if (!getOptionalApplyDefaultOptimizationsCase().equals(other.getOptionalApplyDefaultOptimizationsCase())) return false;
      switch (optionalApplyDefaultOptimizationsCase_) {
        case 1:
          if (getApplyDefaultOptimizations()
              != other.getApplyDefaultOptimizations()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalAutotuneCase().equals(other.getOptionalAutotuneCase())) return false;
      switch (optionalAutotuneCase_) {
        case 2:
          if (getAutotune()
              != other.getAutotune()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalAutotuneBuffersCase().equals(other.getOptionalAutotuneBuffersCase())) return false;
      switch (optionalAutotuneBuffersCase_) {
        case 3:
          if (getAutotuneBuffers()
              != other.getAutotuneBuffers()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalAutotuneCpuBudgetCase().equals(other.getOptionalAutotuneCpuBudgetCase())) return false;
      switch (optionalAutotuneCpuBudgetCase_) {
        case 4:
          if (getAutotuneCpuBudget()
              != other.getAutotuneCpuBudget()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalAutotuneRamBudgetCase().equals(other.getOptionalAutotuneRamBudgetCase())) return false;
      switch (optionalAutotuneRamBudgetCase_) {
        case 5:
          if (getAutotuneRamBudget()
              != other.getAutotuneRamBudget()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalFilterFusionCase().equals(other.getOptionalFilterFusionCase())) return false;
      switch (optionalFilterFusionCase_) {
        case 6:
          if (getFilterFusion()
              != other.getFilterFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalFilterWithRandomUniformFusionCase().equals(other.getOptionalFilterWithRandomUniformFusionCase())) return false;
      switch (optionalFilterWithRandomUniformFusionCase_) {
        case 7:
          if (getFilterWithRandomUniformFusion()
              != other.getFilterWithRandomUniformFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalHoistRandomUniformCase().equals(other.getOptionalHoistRandomUniformCase())) return false;
      switch (optionalHoistRandomUniformCase_) {
        case 8:
          if (getHoistRandomUniform()
              != other.getHoistRandomUniform()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalMapAndBatchFusionCase().equals(other.getOptionalMapAndBatchFusionCase())) return false;
      switch (optionalMapAndBatchFusionCase_) {
        case 9:
          if (getMapAndBatchFusion()
              != other.getMapAndBatchFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalMapAndFilterFusionCase().equals(other.getOptionalMapAndFilterFusionCase())) return false;
      switch (optionalMapAndFilterFusionCase_) {
        case 10:
          if (getMapAndFilterFusion()
              != other.getMapAndFilterFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalMapFusionCase().equals(other.getOptionalMapFusionCase())) return false;
      switch (optionalMapFusionCase_) {
        case 11:
          if (getMapFusion()
              != other.getMapFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalMapParallelizationCase().equals(other.getOptionalMapParallelizationCase())) return false;
      switch (optionalMapParallelizationCase_) {
        case 12:
          if (getMapParallelization()
              != other.getMapParallelization()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalNoopEliminationCase().equals(other.getOptionalNoopEliminationCase())) return false;
      switch (optionalNoopEliminationCase_) {
        case 14:
          if (getNoopElimination()
              != other.getNoopElimination()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalParallelBatchCase().equals(other.getOptionalParallelBatchCase())) return false;
      switch (optionalParallelBatchCase_) {
        case 15:
          if (getParallelBatch()
              != other.getParallelBatch()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalReorderDataDiscardingOpsCase().equals(other.getOptionalReorderDataDiscardingOpsCase())) return false;
      switch (optionalReorderDataDiscardingOpsCase_) {
        case 16:
          if (getReorderDataDiscardingOps()
              != other.getReorderDataDiscardingOps()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalShuffleAndRepeatFusionCase().equals(other.getOptionalShuffleAndRepeatFusionCase())) return false;
      switch (optionalShuffleAndRepeatFusionCase_) {
        case 17:
          if (getShuffleAndRepeatFusion()
              != other.getShuffleAndRepeatFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMapVectorization()) {
        hash = (37 * hash) + MAP_VECTORIZATION_FIELD_NUMBER;
        hash = (53 * hash) + getMapVectorization().hashCode();
      }
      switch (optionalApplyDefaultOptimizationsCase_) {
        case 1:
          hash = (37 * hash) + APPLY_DEFAULT_OPTIMIZATIONS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getApplyDefaultOptimizations());
          break;
        case 0:
        default:
      }
      switch (optionalAutotuneCase_) {
        case 2:
          hash = (37 * hash) + AUTOTUNE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getAutotune());
          break;
        case 0:
        default:
      }
      switch (optionalAutotuneBuffersCase_) {
        case 3:
          hash = (37 * hash) + AUTOTUNE_BUFFERS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getAutotuneBuffers());
          break;
        case 0:
        default:
      }
      switch (optionalAutotuneCpuBudgetCase_) {
        case 4:
          hash = (37 * hash) + AUTOTUNE_CPU_BUDGET_FIELD_NUMBER;
          hash = (53 * hash) + getAutotuneCpuBudget();
          break;
        case 0:
        default:
      }
      switch (optionalAutotuneRamBudgetCase_) {
        case 5:
          hash = (37 * hash) + AUTOTUNE_RAM_BUDGET_FIELD_NUMBER;
          hash = (53 * hash) + getAutotuneRamBudget();
          break;
        case 0:
        default:
      }
      switch (optionalFilterFusionCase_) {
        case 6:
          hash = (37 * hash) + FILTER_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getFilterFusion());
          break;
        case 0:
        default:
      }
      switch (optionalFilterWithRandomUniformFusionCase_) {
        case 7:
          hash = (37 * hash) + FILTER_WITH_RANDOM_UNIFORM_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getFilterWithRandomUniformFusion());
          break;
        case 0:
        default:
      }
      switch (optionalHoistRandomUniformCase_) {
        case 8:
          hash = (37 * hash) + HOIST_RANDOM_UNIFORM_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHoistRandomUniform());
          break;
        case 0:
        default:
      }
      switch (optionalMapAndBatchFusionCase_) {
        case 9:
          hash = (37 * hash) + MAP_AND_BATCH_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getMapAndBatchFusion());
          break;
        case 0:
        default:
      }
      switch (optionalMapAndFilterFusionCase_) {
        case 10:
          hash = (37 * hash) + MAP_AND_FILTER_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getMapAndFilterFusion());
          break;
        case 0:
        default:
      }
      switch (optionalMapFusionCase_) {
        case 11:
          hash = (37 * hash) + MAP_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getMapFusion());
          break;
        case 0:
        default:
      }
      switch (optionalMapParallelizationCase_) {
        case 12:
          hash = (37 * hash) + MAP_PARALLELIZATION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getMapParallelization());
          break;
        case 0:
        default:
      }
      switch (optionalNoopEliminationCase_) {
        case 14:
          hash = (37 * hash) + NOOP_ELIMINATION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getNoopElimination());
          break;
        case 0:
        default:
      }
      switch (optionalParallelBatchCase_) {
        case 15:
          hash = (37 * hash) + PARALLEL_BATCH_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getParallelBatch());
          break;
        case 0:
        default:
      }
      switch (optionalReorderDataDiscardingOpsCase_) {
        case 16:
          hash = (37 * hash) + REORDER_DATA_DISCARDING_OPS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getReorderDataDiscardingOps());
          break;
        case 0:
        default:
      }
      switch (optionalShuffleAndRepeatFusionCase_) {
        case 17:
          hash = (37 * hash) + SHUFFLE_AND_REPEAT_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getShuffleAndRepeatFusion());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.OptimizationOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.data.OptimizationOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.OptimizationOptions)
        tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.OptimizationOptions.class, tensorflow.data.DatasetOptions.OptimizationOptions.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.OptimizationOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (mapVectorizationBuilder_ == null) {
          mapVectorization_ = null;
        } else {
          mapVectorization_ = null;
          mapVectorizationBuilder_ = null;
        }
        optionalApplyDefaultOptimizationsCase_ = 0;
        optionalApplyDefaultOptimizations_ = null;
        optionalAutotuneCase_ = 0;
        optionalAutotune_ = null;
        optionalAutotuneBuffersCase_ = 0;
        optionalAutotuneBuffers_ = null;
        optionalAutotuneCpuBudgetCase_ = 0;
        optionalAutotuneCpuBudget_ = null;
        optionalAutotuneRamBudgetCase_ = 0;
        optionalAutotuneRamBudget_ = null;
        optionalFilterFusionCase_ = 0;
        optionalFilterFusion_ = null;
        optionalFilterWithRandomUniformFusionCase_ = 0;
        optionalFilterWithRandomUniformFusion_ = null;
        optionalHoistRandomUniformCase_ = 0;
        optionalHoistRandomUniform_ = null;
        optionalMapAndBatchFusionCase_ = 0;
        optionalMapAndBatchFusion_ = null;
        optionalMapAndFilterFusionCase_ = 0;
        optionalMapAndFilterFusion_ = null;
        optionalMapFusionCase_ = 0;
        optionalMapFusion_ = null;
        optionalMapParallelizationCase_ = 0;
        optionalMapParallelization_ = null;
        optionalNoopEliminationCase_ = 0;
        optionalNoopElimination_ = null;
        optionalParallelBatchCase_ = 0;
        optionalParallelBatch_ = null;
        optionalReorderDataDiscardingOpsCase_ = 0;
        optionalReorderDataDiscardingOps_ = null;
        optionalShuffleAndRepeatFusionCase_ = 0;
        optionalShuffleAndRepeatFusion_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.OptimizationOptions getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.OptimizationOptions build() {
        tensorflow.data.DatasetOptions.OptimizationOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.OptimizationOptions buildPartial() {
        tensorflow.data.DatasetOptions.OptimizationOptions result = new tensorflow.data.DatasetOptions.OptimizationOptions(this);
        if (optionalApplyDefaultOptimizationsCase_ == 1) {
          result.optionalApplyDefaultOptimizations_ = optionalApplyDefaultOptimizations_;
        }
        if (optionalAutotuneCase_ == 2) {
          result.optionalAutotune_ = optionalAutotune_;
        }
        if (optionalAutotuneBuffersCase_ == 3) {
          result.optionalAutotuneBuffers_ = optionalAutotuneBuffers_;
        }
        if (optionalAutotuneCpuBudgetCase_ == 4) {
          result.optionalAutotuneCpuBudget_ = optionalAutotuneCpuBudget_;
        }
        if (optionalAutotuneRamBudgetCase_ == 5) {
          result.optionalAutotuneRamBudget_ = optionalAutotuneRamBudget_;
        }
        if (optionalFilterFusionCase_ == 6) {
          result.optionalFilterFusion_ = optionalFilterFusion_;
        }
        if (optionalFilterWithRandomUniformFusionCase_ == 7) {
          result.optionalFilterWithRandomUniformFusion_ = optionalFilterWithRandomUniformFusion_;
        }
        if (optionalHoistRandomUniformCase_ == 8) {
          result.optionalHoistRandomUniform_ = optionalHoistRandomUniform_;
        }
        if (optionalMapAndBatchFusionCase_ == 9) {
          result.optionalMapAndBatchFusion_ = optionalMapAndBatchFusion_;
        }
        if (optionalMapAndFilterFusionCase_ == 10) {
          result.optionalMapAndFilterFusion_ = optionalMapAndFilterFusion_;
        }
        if (optionalMapFusionCase_ == 11) {
          result.optionalMapFusion_ = optionalMapFusion_;
        }
        if (optionalMapParallelizationCase_ == 12) {
          result.optionalMapParallelization_ = optionalMapParallelization_;
        }
        if (mapVectorizationBuilder_ == null) {
          result.mapVectorization_ = mapVectorization_;
        } else {
          result.mapVectorization_ = mapVectorizationBuilder_.build();
        }
        if (optionalNoopEliminationCase_ == 14) {
          result.optionalNoopElimination_ = optionalNoopElimination_;
        }
        if (optionalParallelBatchCase_ == 15) {
          result.optionalParallelBatch_ = optionalParallelBatch_;
        }
        if (optionalReorderDataDiscardingOpsCase_ == 16) {
          result.optionalReorderDataDiscardingOps_ = optionalReorderDataDiscardingOps_;
        }
        if (optionalShuffleAndRepeatFusionCase_ == 17) {
          result.optionalShuffleAndRepeatFusion_ = optionalShuffleAndRepeatFusion_;
        }
        result.optionalApplyDefaultOptimizationsCase_ = optionalApplyDefaultOptimizationsCase_;
        result.optionalAutotuneCase_ = optionalAutotuneCase_;
        result.optionalAutotuneBuffersCase_ = optionalAutotuneBuffersCase_;
        result.optionalAutotuneCpuBudgetCase_ = optionalAutotuneCpuBudgetCase_;
        result.optionalAutotuneRamBudgetCase_ = optionalAutotuneRamBudgetCase_;
        result.optionalFilterFusionCase_ = optionalFilterFusionCase_;
        result.optionalFilterWithRandomUniformFusionCase_ = optionalFilterWithRandomUniformFusionCase_;
        result.optionalHoistRandomUniformCase_ = optionalHoistRandomUniformCase_;
        result.optionalMapAndBatchFusionCase_ = optionalMapAndBatchFusionCase_;
        result.optionalMapAndFilterFusionCase_ = optionalMapAndFilterFusionCase_;
        result.optionalMapFusionCase_ = optionalMapFusionCase_;
        result.optionalMapParallelizationCase_ = optionalMapParallelizationCase_;
        result.optionalNoopEliminationCase_ = optionalNoopEliminationCase_;
        result.optionalParallelBatchCase_ = optionalParallelBatchCase_;
        result.optionalReorderDataDiscardingOpsCase_ = optionalReorderDataDiscardingOpsCase_;
        result.optionalShuffleAndRepeatFusionCase_ = optionalShuffleAndRepeatFusionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.OptimizationOptions) {
          return mergeFrom((tensorflow.data.DatasetOptions.OptimizationOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.OptimizationOptions other) {
        if (other == tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance()) return this;
        if (other.hasMapVectorization()) {
          mergeMapVectorization(other.getMapVectorization());
        }
        switch (other.getOptionalApplyDefaultOptimizationsCase()) {
          case APPLY_DEFAULT_OPTIMIZATIONS: {
            setApplyDefaultOptimizations(other.getApplyDefaultOptimizations());
            break;
          }
          case OPTIONALAPPLYDEFAULTOPTIMIZATIONS_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalAutotuneCase()) {
          case AUTOTUNE: {
            setAutotune(other.getAutotune());
            break;
          }
          case OPTIONALAUTOTUNE_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalAutotuneBuffersCase()) {
          case AUTOTUNE_BUFFERS: {
            setAutotuneBuffers(other.getAutotuneBuffers());
            break;
          }
          case OPTIONALAUTOTUNEBUFFERS_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalAutotuneCpuBudgetCase()) {
          case AUTOTUNE_CPU_BUDGET: {
            setAutotuneCpuBudget(other.getAutotuneCpuBudget());
            break;
          }
          case OPTIONALAUTOTUNECPUBUDGET_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalAutotuneRamBudgetCase()) {
          case AUTOTUNE_RAM_BUDGET: {
            setAutotuneRamBudget(other.getAutotuneRamBudget());
            break;
          }
          case OPTIONALAUTOTUNERAMBUDGET_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalFilterFusionCase()) {
          case FILTER_FUSION: {
            setFilterFusion(other.getFilterFusion());
            break;
          }
          case OPTIONALFILTERFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalFilterWithRandomUniformFusionCase()) {
          case FILTER_WITH_RANDOM_UNIFORM_FUSION: {
            setFilterWithRandomUniformFusion(other.getFilterWithRandomUniformFusion());
            break;
          }
          case OPTIONALFILTERWITHRANDOMUNIFORMFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalHoistRandomUniformCase()) {
          case HOIST_RANDOM_UNIFORM: {
            setHoistRandomUniform(other.getHoistRandomUniform());
            break;
          }
          case OPTIONALHOISTRANDOMUNIFORM_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalMapAndBatchFusionCase()) {
          case MAP_AND_BATCH_FUSION: {
            setMapAndBatchFusion(other.getMapAndBatchFusion());
            break;
          }
          case OPTIONALMAPANDBATCHFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalMapAndFilterFusionCase()) {
          case MAP_AND_FILTER_FUSION: {
            setMapAndFilterFusion(other.getMapAndFilterFusion());
            break;
          }
          case OPTIONALMAPANDFILTERFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalMapFusionCase()) {
          case MAP_FUSION: {
            setMapFusion(other.getMapFusion());
            break;
          }
          case OPTIONALMAPFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalMapParallelizationCase()) {
          case MAP_PARALLELIZATION: {
            setMapParallelization(other.getMapParallelization());
            break;
          }
          case OPTIONALMAPPARALLELIZATION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalNoopEliminationCase()) {
          case NOOP_ELIMINATION: {
            setNoopElimination(other.getNoopElimination());
            break;
          }
          case OPTIONALNOOPELIMINATION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalParallelBatchCase()) {
          case PARALLEL_BATCH: {
            setParallelBatch(other.getParallelBatch());
            break;
          }
          case OPTIONALPARALLELBATCH_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalReorderDataDiscardingOpsCase()) {
          case REORDER_DATA_DISCARDING_OPS: {
            setReorderDataDiscardingOps(other.getReorderDataDiscardingOps());
            break;
          }
          case OPTIONALREORDERDATADISCARDINGOPS_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalShuffleAndRepeatFusionCase()) {
          case SHUFFLE_AND_REPEAT_FUSION: {
            setShuffleAndRepeatFusion(other.getShuffleAndRepeatFusion());
            break;
          }
          case OPTIONALSHUFFLEANDREPEATFUSION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.data.DatasetOptions.OptimizationOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.data.DatasetOptions.OptimizationOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int optionalApplyDefaultOptimizationsCase_ = 0;
      private java.lang.Object optionalApplyDefaultOptimizations_;
      public OptionalApplyDefaultOptimizationsCase
          getOptionalApplyDefaultOptimizationsCase() {
        return OptionalApplyDefaultOptimizationsCase.forNumber(
            optionalApplyDefaultOptimizationsCase_);
      }

      public Builder clearOptionalApplyDefaultOptimizations() {
        optionalApplyDefaultOptimizationsCase_ = 0;
        optionalApplyDefaultOptimizations_ = null;
        onChanged();
        return this;
      }

      private int optionalAutotuneCase_ = 0;
      private java.lang.Object optionalAutotune_;
      public OptionalAutotuneCase
          getOptionalAutotuneCase() {
        return OptionalAutotuneCase.forNumber(
            optionalAutotuneCase_);
      }

      public Builder clearOptionalAutotune() {
        optionalAutotuneCase_ = 0;
        optionalAutotune_ = null;
        onChanged();
        return this;
      }

      private int optionalAutotuneBuffersCase_ = 0;
      private java.lang.Object optionalAutotuneBuffers_;
      public OptionalAutotuneBuffersCase
          getOptionalAutotuneBuffersCase() {
        return OptionalAutotuneBuffersCase.forNumber(
            optionalAutotuneBuffersCase_);
      }

      public Builder clearOptionalAutotuneBuffers() {
        optionalAutotuneBuffersCase_ = 0;
        optionalAutotuneBuffers_ = null;
        onChanged();
        return this;
      }

      private int optionalAutotuneCpuBudgetCase_ = 0;
      private java.lang.Object optionalAutotuneCpuBudget_;
      public OptionalAutotuneCpuBudgetCase
          getOptionalAutotuneCpuBudgetCase() {
        return OptionalAutotuneCpuBudgetCase.forNumber(
            optionalAutotuneCpuBudgetCase_);
      }

      public Builder clearOptionalAutotuneCpuBudget() {
        optionalAutotuneCpuBudgetCase_ = 0;
        optionalAutotuneCpuBudget_ = null;
        onChanged();
        return this;
      }

      private int optionalAutotuneRamBudgetCase_ = 0;
      private java.lang.Object optionalAutotuneRamBudget_;
      public OptionalAutotuneRamBudgetCase
          getOptionalAutotuneRamBudgetCase() {
        return OptionalAutotuneRamBudgetCase.forNumber(
            optionalAutotuneRamBudgetCase_);
      }

      public Builder clearOptionalAutotuneRamBudget() {
        optionalAutotuneRamBudgetCase_ = 0;
        optionalAutotuneRamBudget_ = null;
        onChanged();
        return this;
      }

      private int optionalFilterFusionCase_ = 0;
      private java.lang.Object optionalFilterFusion_;
      public OptionalFilterFusionCase
          getOptionalFilterFusionCase() {
        return OptionalFilterFusionCase.forNumber(
            optionalFilterFusionCase_);
      }

      public Builder clearOptionalFilterFusion() {
        optionalFilterFusionCase_ = 0;
        optionalFilterFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalFilterWithRandomUniformFusionCase_ = 0;
      private java.lang.Object optionalFilterWithRandomUniformFusion_;
      public OptionalFilterWithRandomUniformFusionCase
          getOptionalFilterWithRandomUniformFusionCase() {
        return OptionalFilterWithRandomUniformFusionCase.forNumber(
            optionalFilterWithRandomUniformFusionCase_);
      }

      public Builder clearOptionalFilterWithRandomUniformFusion() {
        optionalFilterWithRandomUniformFusionCase_ = 0;
        optionalFilterWithRandomUniformFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalHoistRandomUniformCase_ = 0;
      private java.lang.Object optionalHoistRandomUniform_;
      public OptionalHoistRandomUniformCase
          getOptionalHoistRandomUniformCase() {
        return OptionalHoistRandomUniformCase.forNumber(
            optionalHoistRandomUniformCase_);
      }

      public Builder clearOptionalHoistRandomUniform() {
        optionalHoistRandomUniformCase_ = 0;
        optionalHoistRandomUniform_ = null;
        onChanged();
        return this;
      }

      private int optionalMapAndBatchFusionCase_ = 0;
      private java.lang.Object optionalMapAndBatchFusion_;
      public OptionalMapAndBatchFusionCase
          getOptionalMapAndBatchFusionCase() {
        return OptionalMapAndBatchFusionCase.forNumber(
            optionalMapAndBatchFusionCase_);
      }

      public Builder clearOptionalMapAndBatchFusion() {
        optionalMapAndBatchFusionCase_ = 0;
        optionalMapAndBatchFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalMapAndFilterFusionCase_ = 0;
      private java.lang.Object optionalMapAndFilterFusion_;
      public OptionalMapAndFilterFusionCase
          getOptionalMapAndFilterFusionCase() {
        return OptionalMapAndFilterFusionCase.forNumber(
            optionalMapAndFilterFusionCase_);
      }

      public Builder clearOptionalMapAndFilterFusion() {
        optionalMapAndFilterFusionCase_ = 0;
        optionalMapAndFilterFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalMapFusionCase_ = 0;
      private java.lang.Object optionalMapFusion_;
      public OptionalMapFusionCase
          getOptionalMapFusionCase() {
        return OptionalMapFusionCase.forNumber(
            optionalMapFusionCase_);
      }

      public Builder clearOptionalMapFusion() {
        optionalMapFusionCase_ = 0;
        optionalMapFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalMapParallelizationCase_ = 0;
      private java.lang.Object optionalMapParallelization_;
      public OptionalMapParallelizationCase
          getOptionalMapParallelizationCase() {
        return OptionalMapParallelizationCase.forNumber(
            optionalMapParallelizationCase_);
      }

      public Builder clearOptionalMapParallelization() {
        optionalMapParallelizationCase_ = 0;
        optionalMapParallelization_ = null;
        onChanged();
        return this;
      }

      private int optionalNoopEliminationCase_ = 0;
      private java.lang.Object optionalNoopElimination_;
      public OptionalNoopEliminationCase
          getOptionalNoopEliminationCase() {
        return OptionalNoopEliminationCase.forNumber(
            optionalNoopEliminationCase_);
      }

      public Builder clearOptionalNoopElimination() {
        optionalNoopEliminationCase_ = 0;
        optionalNoopElimination_ = null;
        onChanged();
        return this;
      }

      private int optionalParallelBatchCase_ = 0;
      private java.lang.Object optionalParallelBatch_;
      public OptionalParallelBatchCase
          getOptionalParallelBatchCase() {
        return OptionalParallelBatchCase.forNumber(
            optionalParallelBatchCase_);
      }

      public Builder clearOptionalParallelBatch() {
        optionalParallelBatchCase_ = 0;
        optionalParallelBatch_ = null;
        onChanged();
        return this;
      }

      private int optionalReorderDataDiscardingOpsCase_ = 0;
      private java.lang.Object optionalReorderDataDiscardingOps_;
      public OptionalReorderDataDiscardingOpsCase
          getOptionalReorderDataDiscardingOpsCase() {
        return OptionalReorderDataDiscardingOpsCase.forNumber(
            optionalReorderDataDiscardingOpsCase_);
      }

      public Builder clearOptionalReorderDataDiscardingOps() {
        optionalReorderDataDiscardingOpsCase_ = 0;
        optionalReorderDataDiscardingOps_ = null;
        onChanged();
        return this;
      }

      private int optionalShuffleAndRepeatFusionCase_ = 0;
      private java.lang.Object optionalShuffleAndRepeatFusion_;
      public OptionalShuffleAndRepeatFusionCase
          getOptionalShuffleAndRepeatFusionCase() {
        return OptionalShuffleAndRepeatFusionCase.forNumber(
            optionalShuffleAndRepeatFusionCase_);
      }

      public Builder clearOptionalShuffleAndRepeatFusion() {
        optionalShuffleAndRepeatFusionCase_ = 0;
        optionalShuffleAndRepeatFusion_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>bool apply_default_optimizations = 1;</code>
       */
      public boolean getApplyDefaultOptimizations() {
        if (optionalApplyDefaultOptimizationsCase_ == 1) {
          return (java.lang.Boolean) optionalApplyDefaultOptimizations_;
        }
        return false;
      }
      /**
       * <code>bool apply_default_optimizations = 1;</code>
       */
      public Builder setApplyDefaultOptimizations(boolean value) {
        optionalApplyDefaultOptimizationsCase_ = 1;
        optionalApplyDefaultOptimizations_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool apply_default_optimizations = 1;</code>
       */
      public Builder clearApplyDefaultOptimizations() {
        if (optionalApplyDefaultOptimizationsCase_ == 1) {
          optionalApplyDefaultOptimizationsCase_ = 0;
          optionalApplyDefaultOptimizations_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool autotune = 2;</code>
       */
      public boolean getAutotune() {
        if (optionalAutotuneCase_ == 2) {
          return (java.lang.Boolean) optionalAutotune_;
        }
        return false;
      }
      /**
       * <code>bool autotune = 2;</code>
       */
      public Builder setAutotune(boolean value) {
        optionalAutotuneCase_ = 2;
        optionalAutotune_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool autotune = 2;</code>
       */
      public Builder clearAutotune() {
        if (optionalAutotuneCase_ == 2) {
          optionalAutotuneCase_ = 0;
          optionalAutotune_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool autotune_buffers = 3;</code>
       */
      public boolean getAutotuneBuffers() {
        if (optionalAutotuneBuffersCase_ == 3) {
          return (java.lang.Boolean) optionalAutotuneBuffers_;
        }
        return false;
      }
      /**
       * <code>bool autotune_buffers = 3;</code>
       */
      public Builder setAutotuneBuffers(boolean value) {
        optionalAutotuneBuffersCase_ = 3;
        optionalAutotuneBuffers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool autotune_buffers = 3;</code>
       */
      public Builder clearAutotuneBuffers() {
        if (optionalAutotuneBuffersCase_ == 3) {
          optionalAutotuneBuffersCase_ = 0;
          optionalAutotuneBuffers_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int32 autotune_cpu_budget = 4;</code>
       */
      public int getAutotuneCpuBudget() {
        if (optionalAutotuneCpuBudgetCase_ == 4) {
          return (java.lang.Integer) optionalAutotuneCpuBudget_;
        }
        return 0;
      }
      /**
       * <code>int32 autotune_cpu_budget = 4;</code>
       */
      public Builder setAutotuneCpuBudget(int value) {
        optionalAutotuneCpuBudgetCase_ = 4;
        optionalAutotuneCpuBudget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 autotune_cpu_budget = 4;</code>
       */
      public Builder clearAutotuneCpuBudget() {
        if (optionalAutotuneCpuBudgetCase_ == 4) {
          optionalAutotuneCpuBudgetCase_ = 0;
          optionalAutotuneCpuBudget_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int32 autotune_ram_budget = 5;</code>
       */
      public int getAutotuneRamBudget() {
        if (optionalAutotuneRamBudgetCase_ == 5) {
          return (java.lang.Integer) optionalAutotuneRamBudget_;
        }
        return 0;
      }
      /**
       * <code>int32 autotune_ram_budget = 5;</code>
       */
      public Builder setAutotuneRamBudget(int value) {
        optionalAutotuneRamBudgetCase_ = 5;
        optionalAutotuneRamBudget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 autotune_ram_budget = 5;</code>
       */
      public Builder clearAutotuneRamBudget() {
        if (optionalAutotuneRamBudgetCase_ == 5) {
          optionalAutotuneRamBudgetCase_ = 0;
          optionalAutotuneRamBudget_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool filter_fusion = 6;</code>
       */
      public boolean getFilterFusion() {
        if (optionalFilterFusionCase_ == 6) {
          return (java.lang.Boolean) optionalFilterFusion_;
        }
        return false;
      }
      /**
       * <code>bool filter_fusion = 6;</code>
       */
      public Builder setFilterFusion(boolean value) {
        optionalFilterFusionCase_ = 6;
        optionalFilterFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool filter_fusion = 6;</code>
       */
      public Builder clearFilterFusion() {
        if (optionalFilterFusionCase_ == 6) {
          optionalFilterFusionCase_ = 0;
          optionalFilterFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool filter_with_random_uniform_fusion = 7;</code>
       */
      public boolean getFilterWithRandomUniformFusion() {
        if (optionalFilterWithRandomUniformFusionCase_ == 7) {
          return (java.lang.Boolean) optionalFilterWithRandomUniformFusion_;
        }
        return false;
      }
      /**
       * <code>bool filter_with_random_uniform_fusion = 7;</code>
       */
      public Builder setFilterWithRandomUniformFusion(boolean value) {
        optionalFilterWithRandomUniformFusionCase_ = 7;
        optionalFilterWithRandomUniformFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool filter_with_random_uniform_fusion = 7;</code>
       */
      public Builder clearFilterWithRandomUniformFusion() {
        if (optionalFilterWithRandomUniformFusionCase_ == 7) {
          optionalFilterWithRandomUniformFusionCase_ = 0;
          optionalFilterWithRandomUniformFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool hoist_random_uniform = 8;</code>
       */
      public boolean getHoistRandomUniform() {
        if (optionalHoistRandomUniformCase_ == 8) {
          return (java.lang.Boolean) optionalHoistRandomUniform_;
        }
        return false;
      }
      /**
       * <code>bool hoist_random_uniform = 8;</code>
       */
      public Builder setHoistRandomUniform(boolean value) {
        optionalHoistRandomUniformCase_ = 8;
        optionalHoistRandomUniform_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool hoist_random_uniform = 8;</code>
       */
      public Builder clearHoistRandomUniform() {
        if (optionalHoistRandomUniformCase_ == 8) {
          optionalHoistRandomUniformCase_ = 0;
          optionalHoistRandomUniform_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool map_and_batch_fusion = 9;</code>
       */
      public boolean getMapAndBatchFusion() {
        if (optionalMapAndBatchFusionCase_ == 9) {
          return (java.lang.Boolean) optionalMapAndBatchFusion_;
        }
        return false;
      }
      /**
       * <code>bool map_and_batch_fusion = 9;</code>
       */
      public Builder setMapAndBatchFusion(boolean value) {
        optionalMapAndBatchFusionCase_ = 9;
        optionalMapAndBatchFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool map_and_batch_fusion = 9;</code>
       */
      public Builder clearMapAndBatchFusion() {
        if (optionalMapAndBatchFusionCase_ == 9) {
          optionalMapAndBatchFusionCase_ = 0;
          optionalMapAndBatchFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool map_and_filter_fusion = 10;</code>
       */
      public boolean getMapAndFilterFusion() {
        if (optionalMapAndFilterFusionCase_ == 10) {
          return (java.lang.Boolean) optionalMapAndFilterFusion_;
        }
        return false;
      }
      /**
       * <code>bool map_and_filter_fusion = 10;</code>
       */
      public Builder setMapAndFilterFusion(boolean value) {
        optionalMapAndFilterFusionCase_ = 10;
        optionalMapAndFilterFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool map_and_filter_fusion = 10;</code>
       */
      public Builder clearMapAndFilterFusion() {
        if (optionalMapAndFilterFusionCase_ == 10) {
          optionalMapAndFilterFusionCase_ = 0;
          optionalMapAndFilterFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool map_fusion = 11;</code>
       */
      public boolean getMapFusion() {
        if (optionalMapFusionCase_ == 11) {
          return (java.lang.Boolean) optionalMapFusion_;
        }
        return false;
      }
      /**
       * <code>bool map_fusion = 11;</code>
       */
      public Builder setMapFusion(boolean value) {
        optionalMapFusionCase_ = 11;
        optionalMapFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool map_fusion = 11;</code>
       */
      public Builder clearMapFusion() {
        if (optionalMapFusionCase_ == 11) {
          optionalMapFusionCase_ = 0;
          optionalMapFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool map_parallelization = 12;</code>
       */
      public boolean getMapParallelization() {
        if (optionalMapParallelizationCase_ == 12) {
          return (java.lang.Boolean) optionalMapParallelization_;
        }
        return false;
      }
      /**
       * <code>bool map_parallelization = 12;</code>
       */
      public Builder setMapParallelization(boolean value) {
        optionalMapParallelizationCase_ = 12;
        optionalMapParallelization_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool map_parallelization = 12;</code>
       */
      public Builder clearMapParallelization() {
        if (optionalMapParallelizationCase_ == 12) {
          optionalMapParallelizationCase_ = 0;
          optionalMapParallelization_ = null;
          onChanged();
        }
        return this;
      }

      private tensorflow.data.DatasetOptions.MapVectorization mapVectorization_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.MapVectorization, tensorflow.data.DatasetOptions.MapVectorization.Builder, tensorflow.data.DatasetOptions.MapVectorizationOrBuilder> mapVectorizationBuilder_;
      /**
       * <pre>
       * The map vectorization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
       */
      public boolean hasMapVectorization() {
        return mapVectorizationBuilder_ != null || mapVectorization_ != null;
      }
      /**
       * <pre>
       * The map vectorization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
       */
      public tensorflow.data.DatasetOptions.MapVectorization getMapVectorization() {
        if (mapVectorizationBuilder_ == null) {
          return mapVectorization_ == null ? tensorflow.data.DatasetOptions.MapVectorization.getDefaultInstance() : mapVectorization_;
        } else {
          return mapVectorizationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The map vectorization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
       */
      public Builder setMapVectorization(tensorflow.data.DatasetOptions.MapVectorization value) {
        if (mapVectorizationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapVectorization_ = value;
          onChanged();
        } else {
          mapVectorizationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The map vectorization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
       */
      public Builder setMapVectorization(
          tensorflow.data.DatasetOptions.MapVectorization.Builder builderForValue) {
        if (mapVectorizationBuilder_ == null) {
          mapVectorization_ = builderForValue.build();
          onChanged();
        } else {
          mapVectorizationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The map vectorization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
       */
      public Builder mergeMapVectorization(tensorflow.data.DatasetOptions.MapVectorization value) {
        if (mapVectorizationBuilder_ == null) {
          if (mapVectorization_ != null) {
            mapVectorization_ =
              tensorflow.data.DatasetOptions.MapVectorization.newBuilder(mapVectorization_).mergeFrom(value).buildPartial();
          } else {
            mapVectorization_ = value;
          }
          onChanged();
        } else {
          mapVectorizationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The map vectorization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
       */
      public Builder clearMapVectorization() {
        if (mapVectorizationBuilder_ == null) {
          mapVectorization_ = null;
          onChanged();
        } else {
          mapVectorization_ = null;
          mapVectorizationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The map vectorization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
       */
      public tensorflow.data.DatasetOptions.MapVectorization.Builder getMapVectorizationBuilder() {
        
        onChanged();
        return getMapVectorizationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The map vectorization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
       */
      public tensorflow.data.DatasetOptions.MapVectorizationOrBuilder getMapVectorizationOrBuilder() {
        if (mapVectorizationBuilder_ != null) {
          return mapVectorizationBuilder_.getMessageOrBuilder();
        } else {
          return mapVectorization_ == null ?
              tensorflow.data.DatasetOptions.MapVectorization.getDefaultInstance() : mapVectorization_;
        }
      }
      /**
       * <pre>
       * The map vectorization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.MapVectorization map_vectorization = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.MapVectorization, tensorflow.data.DatasetOptions.MapVectorization.Builder, tensorflow.data.DatasetOptions.MapVectorizationOrBuilder> 
          getMapVectorizationFieldBuilder() {
        if (mapVectorizationBuilder_ == null) {
          mapVectorizationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.data.DatasetOptions.MapVectorization, tensorflow.data.DatasetOptions.MapVectorization.Builder, tensorflow.data.DatasetOptions.MapVectorizationOrBuilder>(
                  getMapVectorization(),
                  getParentForChildren(),
                  isClean());
          mapVectorization_ = null;
        }
        return mapVectorizationBuilder_;
      }

      /**
       * <code>bool noop_elimination = 14;</code>
       */
      public boolean getNoopElimination() {
        if (optionalNoopEliminationCase_ == 14) {
          return (java.lang.Boolean) optionalNoopElimination_;
        }
        return false;
      }
      /**
       * <code>bool noop_elimination = 14;</code>
       */
      public Builder setNoopElimination(boolean value) {
        optionalNoopEliminationCase_ = 14;
        optionalNoopElimination_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool noop_elimination = 14;</code>
       */
      public Builder clearNoopElimination() {
        if (optionalNoopEliminationCase_ == 14) {
          optionalNoopEliminationCase_ = 0;
          optionalNoopElimination_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool parallel_batch = 15;</code>
       */
      public boolean getParallelBatch() {
        if (optionalParallelBatchCase_ == 15) {
          return (java.lang.Boolean) optionalParallelBatch_;
        }
        return false;
      }
      /**
       * <code>bool parallel_batch = 15;</code>
       */
      public Builder setParallelBatch(boolean value) {
        optionalParallelBatchCase_ = 15;
        optionalParallelBatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool parallel_batch = 15;</code>
       */
      public Builder clearParallelBatch() {
        if (optionalParallelBatchCase_ == 15) {
          optionalParallelBatchCase_ = 0;
          optionalParallelBatch_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool reorder_data_discarding_ops = 16;</code>
       */
      public boolean getReorderDataDiscardingOps() {
        if (optionalReorderDataDiscardingOpsCase_ == 16) {
          return (java.lang.Boolean) optionalReorderDataDiscardingOps_;
        }
        return false;
      }
      /**
       * <code>bool reorder_data_discarding_ops = 16;</code>
       */
      public Builder setReorderDataDiscardingOps(boolean value) {
        optionalReorderDataDiscardingOpsCase_ = 16;
        optionalReorderDataDiscardingOps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool reorder_data_discarding_ops = 16;</code>
       */
      public Builder clearReorderDataDiscardingOps() {
        if (optionalReorderDataDiscardingOpsCase_ == 16) {
          optionalReorderDataDiscardingOpsCase_ = 0;
          optionalReorderDataDiscardingOps_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool shuffle_and_repeat_fusion = 17;</code>
       */
      public boolean getShuffleAndRepeatFusion() {
        if (optionalShuffleAndRepeatFusionCase_ == 17) {
          return (java.lang.Boolean) optionalShuffleAndRepeatFusion_;
        }
        return false;
      }
      /**
       * <code>bool shuffle_and_repeat_fusion = 17;</code>
       */
      public Builder setShuffleAndRepeatFusion(boolean value) {
        optionalShuffleAndRepeatFusionCase_ = 17;
        optionalShuffleAndRepeatFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool shuffle_and_repeat_fusion = 17;</code>
       */
      public Builder clearShuffleAndRepeatFusion() {
        if (optionalShuffleAndRepeatFusionCase_ == 17) {
          optionalShuffleAndRepeatFusionCase_ = 0;
          optionalShuffleAndRepeatFusion_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.OptimizationOptions)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.OptimizationOptions)
    private static final tensorflow.data.DatasetOptions.OptimizationOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.OptimizationOptions();
    }

    public static tensorflow.data.DatasetOptions.OptimizationOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OptimizationOptions>
        PARSER = new com.google.protobuf.AbstractParser<OptimizationOptions>() {
      @java.lang.Override
      public OptimizationOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OptimizationOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OptimizationOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OptimizationOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.OptimizationOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ThreadingOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.ThreadingOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 max_intra_op_parallelism = 1;</code>
     */
    int getMaxIntraOpParallelism();

    /**
     * <code>int32 private_threadpool_size = 2;</code>
     */
    int getPrivateThreadpoolSize();

    public tensorflow.data.DatasetOptions.ThreadingOptions.OptionalMaxIntraOpParallelismCase getOptionalMaxIntraOpParallelismCase();

    public tensorflow.data.DatasetOptions.ThreadingOptions.OptionalPrivateThreadpoolSizeCase getOptionalPrivateThreadpoolSizeCase();
  }
  /**
   * Protobuf type {@code tensorflow.data.ThreadingOptions}
   */
  public  static final class ThreadingOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.ThreadingOptions)
      ThreadingOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ThreadingOptions.newBuilder() to construct.
    private ThreadingOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ThreadingOptions() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ThreadingOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ThreadingOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              optionalMaxIntraOpParallelismCase_ = 1;
              optionalMaxIntraOpParallelism_ = input.readInt32();
              break;
            }
            case 16: {
              optionalPrivateThreadpoolSizeCase_ = 2;
              optionalPrivateThreadpoolSize_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.ThreadingOptions.class, tensorflow.data.DatasetOptions.ThreadingOptions.Builder.class);
    }

    private int optionalMaxIntraOpParallelismCase_ = 0;
    private java.lang.Object optionalMaxIntraOpParallelism_;
    public enum OptionalMaxIntraOpParallelismCase
        implements com.google.protobuf.Internal.EnumLite {
      MAX_INTRA_OP_PARALLELISM(1),
      OPTIONALMAXINTRAOPPARALLELISM_NOT_SET(0);
      private final int value;
      private OptionalMaxIntraOpParallelismCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMaxIntraOpParallelismCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMaxIntraOpParallelismCase forNumber(int value) {
        switch (value) {
          case 1: return MAX_INTRA_OP_PARALLELISM;
          case 0: return OPTIONALMAXINTRAOPPARALLELISM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMaxIntraOpParallelismCase
    getOptionalMaxIntraOpParallelismCase() {
      return OptionalMaxIntraOpParallelismCase.forNumber(
          optionalMaxIntraOpParallelismCase_);
    }

    private int optionalPrivateThreadpoolSizeCase_ = 0;
    private java.lang.Object optionalPrivateThreadpoolSize_;
    public enum OptionalPrivateThreadpoolSizeCase
        implements com.google.protobuf.Internal.EnumLite {
      PRIVATE_THREADPOOL_SIZE(2),
      OPTIONALPRIVATETHREADPOOLSIZE_NOT_SET(0);
      private final int value;
      private OptionalPrivateThreadpoolSizeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalPrivateThreadpoolSizeCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalPrivateThreadpoolSizeCase forNumber(int value) {
        switch (value) {
          case 2: return PRIVATE_THREADPOOL_SIZE;
          case 0: return OPTIONALPRIVATETHREADPOOLSIZE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalPrivateThreadpoolSizeCase
    getOptionalPrivateThreadpoolSizeCase() {
      return OptionalPrivateThreadpoolSizeCase.forNumber(
          optionalPrivateThreadpoolSizeCase_);
    }

    public static final int MAX_INTRA_OP_PARALLELISM_FIELD_NUMBER = 1;
    /**
     * <code>int32 max_intra_op_parallelism = 1;</code>
     */
    public int getMaxIntraOpParallelism() {
      if (optionalMaxIntraOpParallelismCase_ == 1) {
        return (java.lang.Integer) optionalMaxIntraOpParallelism_;
      }
      return 0;
    }

    public static final int PRIVATE_THREADPOOL_SIZE_FIELD_NUMBER = 2;
    /**
     * <code>int32 private_threadpool_size = 2;</code>
     */
    public int getPrivateThreadpoolSize() {
      if (optionalPrivateThreadpoolSizeCase_ == 2) {
        return (java.lang.Integer) optionalPrivateThreadpoolSize_;
      }
      return 0;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalMaxIntraOpParallelismCase_ == 1) {
        output.writeInt32(
            1, (int)((java.lang.Integer) optionalMaxIntraOpParallelism_));
      }
      if (optionalPrivateThreadpoolSizeCase_ == 2) {
        output.writeInt32(
            2, (int)((java.lang.Integer) optionalPrivateThreadpoolSize_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalMaxIntraOpParallelismCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              1, (int)((java.lang.Integer) optionalMaxIntraOpParallelism_));
      }
      if (optionalPrivateThreadpoolSizeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              2, (int)((java.lang.Integer) optionalPrivateThreadpoolSize_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.ThreadingOptions)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.ThreadingOptions other = (tensorflow.data.DatasetOptions.ThreadingOptions) obj;

      if (!getOptionalMaxIntraOpParallelismCase().equals(other.getOptionalMaxIntraOpParallelismCase())) return false;
      switch (optionalMaxIntraOpParallelismCase_) {
        case 1:
          if (getMaxIntraOpParallelism()
              != other.getMaxIntraOpParallelism()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalPrivateThreadpoolSizeCase().equals(other.getOptionalPrivateThreadpoolSizeCase())) return false;
      switch (optionalPrivateThreadpoolSizeCase_) {
        case 2:
          if (getPrivateThreadpoolSize()
              != other.getPrivateThreadpoolSize()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (optionalMaxIntraOpParallelismCase_) {
        case 1:
          hash = (37 * hash) + MAX_INTRA_OP_PARALLELISM_FIELD_NUMBER;
          hash = (53 * hash) + getMaxIntraOpParallelism();
          break;
        case 0:
        default:
      }
      switch (optionalPrivateThreadpoolSizeCase_) {
        case 2:
          hash = (37 * hash) + PRIVATE_THREADPOOL_SIZE_FIELD_NUMBER;
          hash = (53 * hash) + getPrivateThreadpoolSize();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.ThreadingOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.data.ThreadingOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.ThreadingOptions)
        tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.ThreadingOptions.class, tensorflow.data.DatasetOptions.ThreadingOptions.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.ThreadingOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        optionalMaxIntraOpParallelismCase_ = 0;
        optionalMaxIntraOpParallelism_ = null;
        optionalPrivateThreadpoolSizeCase_ = 0;
        optionalPrivateThreadpoolSize_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.ThreadingOptions getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.ThreadingOptions build() {
        tensorflow.data.DatasetOptions.ThreadingOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.ThreadingOptions buildPartial() {
        tensorflow.data.DatasetOptions.ThreadingOptions result = new tensorflow.data.DatasetOptions.ThreadingOptions(this);
        if (optionalMaxIntraOpParallelismCase_ == 1) {
          result.optionalMaxIntraOpParallelism_ = optionalMaxIntraOpParallelism_;
        }
        if (optionalPrivateThreadpoolSizeCase_ == 2) {
          result.optionalPrivateThreadpoolSize_ = optionalPrivateThreadpoolSize_;
        }
        result.optionalMaxIntraOpParallelismCase_ = optionalMaxIntraOpParallelismCase_;
        result.optionalPrivateThreadpoolSizeCase_ = optionalPrivateThreadpoolSizeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.ThreadingOptions) {
          return mergeFrom((tensorflow.data.DatasetOptions.ThreadingOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.ThreadingOptions other) {
        if (other == tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance()) return this;
        switch (other.getOptionalMaxIntraOpParallelismCase()) {
          case MAX_INTRA_OP_PARALLELISM: {
            setMaxIntraOpParallelism(other.getMaxIntraOpParallelism());
            break;
          }
          case OPTIONALMAXINTRAOPPARALLELISM_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalPrivateThreadpoolSizeCase()) {
          case PRIVATE_THREADPOOL_SIZE: {
            setPrivateThreadpoolSize(other.getPrivateThreadpoolSize());
            break;
          }
          case OPTIONALPRIVATETHREADPOOLSIZE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.data.DatasetOptions.ThreadingOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.data.DatasetOptions.ThreadingOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int optionalMaxIntraOpParallelismCase_ = 0;
      private java.lang.Object optionalMaxIntraOpParallelism_;
      public OptionalMaxIntraOpParallelismCase
          getOptionalMaxIntraOpParallelismCase() {
        return OptionalMaxIntraOpParallelismCase.forNumber(
            optionalMaxIntraOpParallelismCase_);
      }

      public Builder clearOptionalMaxIntraOpParallelism() {
        optionalMaxIntraOpParallelismCase_ = 0;
        optionalMaxIntraOpParallelism_ = null;
        onChanged();
        return this;
      }

      private int optionalPrivateThreadpoolSizeCase_ = 0;
      private java.lang.Object optionalPrivateThreadpoolSize_;
      public OptionalPrivateThreadpoolSizeCase
          getOptionalPrivateThreadpoolSizeCase() {
        return OptionalPrivateThreadpoolSizeCase.forNumber(
            optionalPrivateThreadpoolSizeCase_);
      }

      public Builder clearOptionalPrivateThreadpoolSize() {
        optionalPrivateThreadpoolSizeCase_ = 0;
        optionalPrivateThreadpoolSize_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>int32 max_intra_op_parallelism = 1;</code>
       */
      public int getMaxIntraOpParallelism() {
        if (optionalMaxIntraOpParallelismCase_ == 1) {
          return (java.lang.Integer) optionalMaxIntraOpParallelism_;
        }
        return 0;
      }
      /**
       * <code>int32 max_intra_op_parallelism = 1;</code>
       */
      public Builder setMaxIntraOpParallelism(int value) {
        optionalMaxIntraOpParallelismCase_ = 1;
        optionalMaxIntraOpParallelism_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_intra_op_parallelism = 1;</code>
       */
      public Builder clearMaxIntraOpParallelism() {
        if (optionalMaxIntraOpParallelismCase_ == 1) {
          optionalMaxIntraOpParallelismCase_ = 0;
          optionalMaxIntraOpParallelism_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int32 private_threadpool_size = 2;</code>
       */
      public int getPrivateThreadpoolSize() {
        if (optionalPrivateThreadpoolSizeCase_ == 2) {
          return (java.lang.Integer) optionalPrivateThreadpoolSize_;
        }
        return 0;
      }
      /**
       * <code>int32 private_threadpool_size = 2;</code>
       */
      public Builder setPrivateThreadpoolSize(int value) {
        optionalPrivateThreadpoolSizeCase_ = 2;
        optionalPrivateThreadpoolSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 private_threadpool_size = 2;</code>
       */
      public Builder clearPrivateThreadpoolSize() {
        if (optionalPrivateThreadpoolSizeCase_ == 2) {
          optionalPrivateThreadpoolSizeCase_ = 0;
          optionalPrivateThreadpoolSize_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.ThreadingOptions)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.ThreadingOptions)
    private static final tensorflow.data.DatasetOptions.ThreadingOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.ThreadingOptions();
    }

    public static tensorflow.data.DatasetOptions.ThreadingOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ThreadingOptions>
        PARSER = new com.google.protobuf.AbstractParser<ThreadingOptions>() {
      @java.lang.Override
      public ThreadingOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ThreadingOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ThreadingOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThreadingOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.ThreadingOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.Options)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool deterministic = 1;</code>
     */
    boolean getDeterministic();

    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     */
    boolean hasDistributeOptions();
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     */
    tensorflow.data.DatasetOptions.DistributeOptions getDistributeOptions();
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     */
    tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder getDistributeOptionsOrBuilder();

    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     */
    boolean hasOptimizationOptions();
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     */
    tensorflow.data.DatasetOptions.OptimizationOptions getOptimizationOptions();
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     */
    tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder getOptimizationOptionsOrBuilder();

    /**
     * <code>bool slack = 4;</code>
     */
    boolean getSlack();

    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     */
    boolean hasThreadingOptions();
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     */
    tensorflow.data.DatasetOptions.ThreadingOptions getThreadingOptions();
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     */
    tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder getThreadingOptionsOrBuilder();

    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     */
    int getExternalStatePolicyValue();
    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     */
    tensorflow.data.DatasetOptions.ExternalStatePolicy getExternalStatePolicy();

    public tensorflow.data.DatasetOptions.Options.OptionalDeterministicCase getOptionalDeterministicCase();

    public tensorflow.data.DatasetOptions.Options.OptionalSlackCase getOptionalSlackCase();

    public tensorflow.data.DatasetOptions.Options.OptionalExternalStatePolicyCase getOptionalExternalStatePolicyCase();
  }
  /**
   * <pre>
   * Message stored with Dataset objects to control how datasets are processed and
   * optimized.
   * </pre>
   *
   * Protobuf type {@code tensorflow.data.Options}
   */
  public  static final class Options extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.Options)
      OptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Options.newBuilder() to construct.
    private Options(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Options() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Options();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Options(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              optionalDeterministicCase_ = 1;
              optionalDeterministic_ = input.readBool();
              break;
            }
            case 18: {
              tensorflow.data.DatasetOptions.DistributeOptions.Builder subBuilder = null;
              if (distributeOptions_ != null) {
                subBuilder = distributeOptions_.toBuilder();
              }
              distributeOptions_ = input.readMessage(tensorflow.data.DatasetOptions.DistributeOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(distributeOptions_);
                distributeOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              tensorflow.data.DatasetOptions.OptimizationOptions.Builder subBuilder = null;
              if (optimizationOptions_ != null) {
                subBuilder = optimizationOptions_.toBuilder();
              }
              optimizationOptions_ = input.readMessage(tensorflow.data.DatasetOptions.OptimizationOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(optimizationOptions_);
                optimizationOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {
              optionalSlackCase_ = 4;
              optionalSlack_ = input.readBool();
              break;
            }
            case 42: {
              tensorflow.data.DatasetOptions.ThreadingOptions.Builder subBuilder = null;
              if (threadingOptions_ != null) {
                subBuilder = threadingOptions_.toBuilder();
              }
              threadingOptions_ = input.readMessage(tensorflow.data.DatasetOptions.ThreadingOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(threadingOptions_);
                threadingOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              optionalExternalStatePolicyCase_ = 6;
              optionalExternalStatePolicy_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.Options.class, tensorflow.data.DatasetOptions.Options.Builder.class);
    }

    private int optionalDeterministicCase_ = 0;
    private java.lang.Object optionalDeterministic_;
    public enum OptionalDeterministicCase
        implements com.google.protobuf.Internal.EnumLite {
      DETERMINISTIC(1),
      OPTIONALDETERMINISTIC_NOT_SET(0);
      private final int value;
      private OptionalDeterministicCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalDeterministicCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalDeterministicCase forNumber(int value) {
        switch (value) {
          case 1: return DETERMINISTIC;
          case 0: return OPTIONALDETERMINISTIC_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalDeterministicCase
    getOptionalDeterministicCase() {
      return OptionalDeterministicCase.forNumber(
          optionalDeterministicCase_);
    }

    private int optionalSlackCase_ = 0;
    private java.lang.Object optionalSlack_;
    public enum OptionalSlackCase
        implements com.google.protobuf.Internal.EnumLite {
      SLACK(4),
      OPTIONALSLACK_NOT_SET(0);
      private final int value;
      private OptionalSlackCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalSlackCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalSlackCase forNumber(int value) {
        switch (value) {
          case 4: return SLACK;
          case 0: return OPTIONALSLACK_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalSlackCase
    getOptionalSlackCase() {
      return OptionalSlackCase.forNumber(
          optionalSlackCase_);
    }

    private int optionalExternalStatePolicyCase_ = 0;
    private java.lang.Object optionalExternalStatePolicy_;
    public enum OptionalExternalStatePolicyCase
        implements com.google.protobuf.Internal.EnumLite {
      EXTERNAL_STATE_POLICY(6),
      OPTIONALEXTERNALSTATEPOLICY_NOT_SET(0);
      private final int value;
      private OptionalExternalStatePolicyCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalExternalStatePolicyCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalExternalStatePolicyCase forNumber(int value) {
        switch (value) {
          case 6: return EXTERNAL_STATE_POLICY;
          case 0: return OPTIONALEXTERNALSTATEPOLICY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalExternalStatePolicyCase
    getOptionalExternalStatePolicyCase() {
      return OptionalExternalStatePolicyCase.forNumber(
          optionalExternalStatePolicyCase_);
    }

    public static final int DETERMINISTIC_FIELD_NUMBER = 1;
    /**
     * <code>bool deterministic = 1;</code>
     */
    public boolean getDeterministic() {
      if (optionalDeterministicCase_ == 1) {
        return (java.lang.Boolean) optionalDeterministic_;
      }
      return false;
    }

    public static final int DISTRIBUTE_OPTIONS_FIELD_NUMBER = 2;
    private tensorflow.data.DatasetOptions.DistributeOptions distributeOptions_;
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     */
    public boolean hasDistributeOptions() {
      return distributeOptions_ != null;
    }
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     */
    public tensorflow.data.DatasetOptions.DistributeOptions getDistributeOptions() {
      return distributeOptions_ == null ? tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance() : distributeOptions_;
    }
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     */
    public tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder getDistributeOptionsOrBuilder() {
      return getDistributeOptions();
    }

    public static final int OPTIMIZATION_OPTIONS_FIELD_NUMBER = 3;
    private tensorflow.data.DatasetOptions.OptimizationOptions optimizationOptions_;
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     */
    public boolean hasOptimizationOptions() {
      return optimizationOptions_ != null;
    }
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     */
    public tensorflow.data.DatasetOptions.OptimizationOptions getOptimizationOptions() {
      return optimizationOptions_ == null ? tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance() : optimizationOptions_;
    }
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     */
    public tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder getOptimizationOptionsOrBuilder() {
      return getOptimizationOptions();
    }

    public static final int SLACK_FIELD_NUMBER = 4;
    /**
     * <code>bool slack = 4;</code>
     */
    public boolean getSlack() {
      if (optionalSlackCase_ == 4) {
        return (java.lang.Boolean) optionalSlack_;
      }
      return false;
    }

    public static final int THREADING_OPTIONS_FIELD_NUMBER = 5;
    private tensorflow.data.DatasetOptions.ThreadingOptions threadingOptions_;
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     */
    public boolean hasThreadingOptions() {
      return threadingOptions_ != null;
    }
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     */
    public tensorflow.data.DatasetOptions.ThreadingOptions getThreadingOptions() {
      return threadingOptions_ == null ? tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance() : threadingOptions_;
    }
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     */
    public tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder getThreadingOptionsOrBuilder() {
      return getThreadingOptions();
    }

    public static final int EXTERNAL_STATE_POLICY_FIELD_NUMBER = 6;
    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     */
    public int getExternalStatePolicyValue() {
      if (optionalExternalStatePolicyCase_ == 6) {
        return (java.lang.Integer) optionalExternalStatePolicy_;
      }
      return 0;
    }
    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     */
    public tensorflow.data.DatasetOptions.ExternalStatePolicy getExternalStatePolicy() {
      if (optionalExternalStatePolicyCase_ == 6) {
        @SuppressWarnings("deprecation")
        tensorflow.data.DatasetOptions.ExternalStatePolicy result = tensorflow.data.DatasetOptions.ExternalStatePolicy.valueOf(
            (java.lang.Integer) optionalExternalStatePolicy_);
        return result == null ? tensorflow.data.DatasetOptions.ExternalStatePolicy.UNRECOGNIZED : result;
      }
      return tensorflow.data.DatasetOptions.ExternalStatePolicy.POLICY_WARN;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalDeterministicCase_ == 1) {
        output.writeBool(
            1, (boolean)((java.lang.Boolean) optionalDeterministic_));
      }
      if (distributeOptions_ != null) {
        output.writeMessage(2, getDistributeOptions());
      }
      if (optimizationOptions_ != null) {
        output.writeMessage(3, getOptimizationOptions());
      }
      if (optionalSlackCase_ == 4) {
        output.writeBool(
            4, (boolean)((java.lang.Boolean) optionalSlack_));
      }
      if (threadingOptions_ != null) {
        output.writeMessage(5, getThreadingOptions());
      }
      if (optionalExternalStatePolicyCase_ == 6) {
        output.writeEnum(6, ((java.lang.Integer) optionalExternalStatePolicy_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalDeterministicCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              1, (boolean)((java.lang.Boolean) optionalDeterministic_));
      }
      if (distributeOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDistributeOptions());
      }
      if (optimizationOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptimizationOptions());
      }
      if (optionalSlackCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              4, (boolean)((java.lang.Boolean) optionalSlack_));
      }
      if (threadingOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getThreadingOptions());
      }
      if (optionalExternalStatePolicyCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, ((java.lang.Integer) optionalExternalStatePolicy_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.Options)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.Options other = (tensorflow.data.DatasetOptions.Options) obj;

      if (hasDistributeOptions() != other.hasDistributeOptions()) return false;
      if (hasDistributeOptions()) {
        if (!getDistributeOptions()
            .equals(other.getDistributeOptions())) return false;
      }
      if (hasOptimizationOptions() != other.hasOptimizationOptions()) return false;
      if (hasOptimizationOptions()) {
        if (!getOptimizationOptions()
            .equals(other.getOptimizationOptions())) return false;
      }
      if (hasThreadingOptions() != other.hasThreadingOptions()) return false;
      if (hasThreadingOptions()) {
        if (!getThreadingOptions()
            .equals(other.getThreadingOptions())) return false;
      }
      if (!getOptionalDeterministicCase().equals(other.getOptionalDeterministicCase())) return false;
      switch (optionalDeterministicCase_) {
        case 1:
          if (getDeterministic()
              != other.getDeterministic()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalSlackCase().equals(other.getOptionalSlackCase())) return false;
      switch (optionalSlackCase_) {
        case 4:
          if (getSlack()
              != other.getSlack()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalExternalStatePolicyCase().equals(other.getOptionalExternalStatePolicyCase())) return false;
      switch (optionalExternalStatePolicyCase_) {
        case 6:
          if (getExternalStatePolicyValue()
              != other.getExternalStatePolicyValue()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDistributeOptions()) {
        hash = (37 * hash) + DISTRIBUTE_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDistributeOptions().hashCode();
      }
      if (hasOptimizationOptions()) {
        hash = (37 * hash) + OPTIMIZATION_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptimizationOptions().hashCode();
      }
      if (hasThreadingOptions()) {
        hash = (37 * hash) + THREADING_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getThreadingOptions().hashCode();
      }
      switch (optionalDeterministicCase_) {
        case 1:
          hash = (37 * hash) + DETERMINISTIC_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getDeterministic());
          break;
        case 0:
        default:
      }
      switch (optionalSlackCase_) {
        case 4:
          hash = (37 * hash) + SLACK_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getSlack());
          break;
        case 0:
        default:
      }
      switch (optionalExternalStatePolicyCase_) {
        case 6:
          hash = (37 * hash) + EXTERNAL_STATE_POLICY_FIELD_NUMBER;
          hash = (53 * hash) + getExternalStatePolicyValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.Options parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.Options parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.Options prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message stored with Dataset objects to control how datasets are processed and
     * optimized.
     * </pre>
     *
     * Protobuf type {@code tensorflow.data.Options}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.Options)
        tensorflow.data.DatasetOptions.OptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.Options.class, tensorflow.data.DatasetOptions.Options.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.Options.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (distributeOptionsBuilder_ == null) {
          distributeOptions_ = null;
        } else {
          distributeOptions_ = null;
          distributeOptionsBuilder_ = null;
        }
        if (optimizationOptionsBuilder_ == null) {
          optimizationOptions_ = null;
        } else {
          optimizationOptions_ = null;
          optimizationOptionsBuilder_ = null;
        }
        if (threadingOptionsBuilder_ == null) {
          threadingOptions_ = null;
        } else {
          threadingOptions_ = null;
          threadingOptionsBuilder_ = null;
        }
        optionalDeterministicCase_ = 0;
        optionalDeterministic_ = null;
        optionalSlackCase_ = 0;
        optionalSlack_ = null;
        optionalExternalStatePolicyCase_ = 0;
        optionalExternalStatePolicy_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.Options getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.Options.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.Options build() {
        tensorflow.data.DatasetOptions.Options result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.Options buildPartial() {
        tensorflow.data.DatasetOptions.Options result = new tensorflow.data.DatasetOptions.Options(this);
        if (optionalDeterministicCase_ == 1) {
          result.optionalDeterministic_ = optionalDeterministic_;
        }
        if (distributeOptionsBuilder_ == null) {
          result.distributeOptions_ = distributeOptions_;
        } else {
          result.distributeOptions_ = distributeOptionsBuilder_.build();
        }
        if (optimizationOptionsBuilder_ == null) {
          result.optimizationOptions_ = optimizationOptions_;
        } else {
          result.optimizationOptions_ = optimizationOptionsBuilder_.build();
        }
        if (optionalSlackCase_ == 4) {
          result.optionalSlack_ = optionalSlack_;
        }
        if (threadingOptionsBuilder_ == null) {
          result.threadingOptions_ = threadingOptions_;
        } else {
          result.threadingOptions_ = threadingOptionsBuilder_.build();
        }
        if (optionalExternalStatePolicyCase_ == 6) {
          result.optionalExternalStatePolicy_ = optionalExternalStatePolicy_;
        }
        result.optionalDeterministicCase_ = optionalDeterministicCase_;
        result.optionalSlackCase_ = optionalSlackCase_;
        result.optionalExternalStatePolicyCase_ = optionalExternalStatePolicyCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.Options) {
          return mergeFrom((tensorflow.data.DatasetOptions.Options)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.Options other) {
        if (other == tensorflow.data.DatasetOptions.Options.getDefaultInstance()) return this;
        if (other.hasDistributeOptions()) {
          mergeDistributeOptions(other.getDistributeOptions());
        }
        if (other.hasOptimizationOptions()) {
          mergeOptimizationOptions(other.getOptimizationOptions());
        }
        if (other.hasThreadingOptions()) {
          mergeThreadingOptions(other.getThreadingOptions());
        }
        switch (other.getOptionalDeterministicCase()) {
          case DETERMINISTIC: {
            setDeterministic(other.getDeterministic());
            break;
          }
          case OPTIONALDETERMINISTIC_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalSlackCase()) {
          case SLACK: {
            setSlack(other.getSlack());
            break;
          }
          case OPTIONALSLACK_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalExternalStatePolicyCase()) {
          case EXTERNAL_STATE_POLICY: {
            setExternalStatePolicyValue(other.getExternalStatePolicyValue());
            break;
          }
          case OPTIONALEXTERNALSTATEPOLICY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.data.DatasetOptions.Options parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.data.DatasetOptions.Options) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int optionalDeterministicCase_ = 0;
      private java.lang.Object optionalDeterministic_;
      public OptionalDeterministicCase
          getOptionalDeterministicCase() {
        return OptionalDeterministicCase.forNumber(
            optionalDeterministicCase_);
      }

      public Builder clearOptionalDeterministic() {
        optionalDeterministicCase_ = 0;
        optionalDeterministic_ = null;
        onChanged();
        return this;
      }

      private int optionalSlackCase_ = 0;
      private java.lang.Object optionalSlack_;
      public OptionalSlackCase
          getOptionalSlackCase() {
        return OptionalSlackCase.forNumber(
            optionalSlackCase_);
      }

      public Builder clearOptionalSlack() {
        optionalSlackCase_ = 0;
        optionalSlack_ = null;
        onChanged();
        return this;
      }

      private int optionalExternalStatePolicyCase_ = 0;
      private java.lang.Object optionalExternalStatePolicy_;
      public OptionalExternalStatePolicyCase
          getOptionalExternalStatePolicyCase() {
        return OptionalExternalStatePolicyCase.forNumber(
            optionalExternalStatePolicyCase_);
      }

      public Builder clearOptionalExternalStatePolicy() {
        optionalExternalStatePolicyCase_ = 0;
        optionalExternalStatePolicy_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>bool deterministic = 1;</code>
       */
      public boolean getDeterministic() {
        if (optionalDeterministicCase_ == 1) {
          return (java.lang.Boolean) optionalDeterministic_;
        }
        return false;
      }
      /**
       * <code>bool deterministic = 1;</code>
       */
      public Builder setDeterministic(boolean value) {
        optionalDeterministicCase_ = 1;
        optionalDeterministic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool deterministic = 1;</code>
       */
      public Builder clearDeterministic() {
        if (optionalDeterministicCase_ == 1) {
          optionalDeterministicCase_ = 0;
          optionalDeterministic_ = null;
          onChanged();
        }
        return this;
      }

      private tensorflow.data.DatasetOptions.DistributeOptions distributeOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.DistributeOptions, tensorflow.data.DatasetOptions.DistributeOptions.Builder, tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder> distributeOptionsBuilder_;
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public boolean hasDistributeOptions() {
        return distributeOptionsBuilder_ != null || distributeOptions_ != null;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public tensorflow.data.DatasetOptions.DistributeOptions getDistributeOptions() {
        if (distributeOptionsBuilder_ == null) {
          return distributeOptions_ == null ? tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance() : distributeOptions_;
        } else {
          return distributeOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public Builder setDistributeOptions(tensorflow.data.DatasetOptions.DistributeOptions value) {
        if (distributeOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          distributeOptions_ = value;
          onChanged();
        } else {
          distributeOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public Builder setDistributeOptions(
          tensorflow.data.DatasetOptions.DistributeOptions.Builder builderForValue) {
        if (distributeOptionsBuilder_ == null) {
          distributeOptions_ = builderForValue.build();
          onChanged();
        } else {
          distributeOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public Builder mergeDistributeOptions(tensorflow.data.DatasetOptions.DistributeOptions value) {
        if (distributeOptionsBuilder_ == null) {
          if (distributeOptions_ != null) {
            distributeOptions_ =
              tensorflow.data.DatasetOptions.DistributeOptions.newBuilder(distributeOptions_).mergeFrom(value).buildPartial();
          } else {
            distributeOptions_ = value;
          }
          onChanged();
        } else {
          distributeOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public Builder clearDistributeOptions() {
        if (distributeOptionsBuilder_ == null) {
          distributeOptions_ = null;
          onChanged();
        } else {
          distributeOptions_ = null;
          distributeOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public tensorflow.data.DatasetOptions.DistributeOptions.Builder getDistributeOptionsBuilder() {
        
        onChanged();
        return getDistributeOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder getDistributeOptionsOrBuilder() {
        if (distributeOptionsBuilder_ != null) {
          return distributeOptionsBuilder_.getMessageOrBuilder();
        } else {
          return distributeOptions_ == null ?
              tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance() : distributeOptions_;
        }
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.DistributeOptions, tensorflow.data.DatasetOptions.DistributeOptions.Builder, tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder> 
          getDistributeOptionsFieldBuilder() {
        if (distributeOptionsBuilder_ == null) {
          distributeOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.data.DatasetOptions.DistributeOptions, tensorflow.data.DatasetOptions.DistributeOptions.Builder, tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder>(
                  getDistributeOptions(),
                  getParentForChildren(),
                  isClean());
          distributeOptions_ = null;
        }
        return distributeOptionsBuilder_;
      }

      private tensorflow.data.DatasetOptions.OptimizationOptions optimizationOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.OptimizationOptions, tensorflow.data.DatasetOptions.OptimizationOptions.Builder, tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder> optimizationOptionsBuilder_;
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public boolean hasOptimizationOptions() {
        return optimizationOptionsBuilder_ != null || optimizationOptions_ != null;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public tensorflow.data.DatasetOptions.OptimizationOptions getOptimizationOptions() {
        if (optimizationOptionsBuilder_ == null) {
          return optimizationOptions_ == null ? tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance() : optimizationOptions_;
        } else {
          return optimizationOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public Builder setOptimizationOptions(tensorflow.data.DatasetOptions.OptimizationOptions value) {
        if (optimizationOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          optimizationOptions_ = value;
          onChanged();
        } else {
          optimizationOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public Builder setOptimizationOptions(
          tensorflow.data.DatasetOptions.OptimizationOptions.Builder builderForValue) {
        if (optimizationOptionsBuilder_ == null) {
          optimizationOptions_ = builderForValue.build();
          onChanged();
        } else {
          optimizationOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public Builder mergeOptimizationOptions(tensorflow.data.DatasetOptions.OptimizationOptions value) {
        if (optimizationOptionsBuilder_ == null) {
          if (optimizationOptions_ != null) {
            optimizationOptions_ =
              tensorflow.data.DatasetOptions.OptimizationOptions.newBuilder(optimizationOptions_).mergeFrom(value).buildPartial();
          } else {
            optimizationOptions_ = value;
          }
          onChanged();
        } else {
          optimizationOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public Builder clearOptimizationOptions() {
        if (optimizationOptionsBuilder_ == null) {
          optimizationOptions_ = null;
          onChanged();
        } else {
          optimizationOptions_ = null;
          optimizationOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public tensorflow.data.DatasetOptions.OptimizationOptions.Builder getOptimizationOptionsBuilder() {
        
        onChanged();
        return getOptimizationOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder getOptimizationOptionsOrBuilder() {
        if (optimizationOptionsBuilder_ != null) {
          return optimizationOptionsBuilder_.getMessageOrBuilder();
        } else {
          return optimizationOptions_ == null ?
              tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance() : optimizationOptions_;
        }
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.OptimizationOptions, tensorflow.data.DatasetOptions.OptimizationOptions.Builder, tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder> 
          getOptimizationOptionsFieldBuilder() {
        if (optimizationOptionsBuilder_ == null) {
          optimizationOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.data.DatasetOptions.OptimizationOptions, tensorflow.data.DatasetOptions.OptimizationOptions.Builder, tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder>(
                  getOptimizationOptions(),
                  getParentForChildren(),
                  isClean());
          optimizationOptions_ = null;
        }
        return optimizationOptionsBuilder_;
      }

      /**
       * <code>bool slack = 4;</code>
       */
      public boolean getSlack() {
        if (optionalSlackCase_ == 4) {
          return (java.lang.Boolean) optionalSlack_;
        }
        return false;
      }
      /**
       * <code>bool slack = 4;</code>
       */
      public Builder setSlack(boolean value) {
        optionalSlackCase_ = 4;
        optionalSlack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool slack = 4;</code>
       */
      public Builder clearSlack() {
        if (optionalSlackCase_ == 4) {
          optionalSlackCase_ = 0;
          optionalSlack_ = null;
          onChanged();
        }
        return this;
      }

      private tensorflow.data.DatasetOptions.ThreadingOptions threadingOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.ThreadingOptions, tensorflow.data.DatasetOptions.ThreadingOptions.Builder, tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder> threadingOptionsBuilder_;
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public boolean hasThreadingOptions() {
        return threadingOptionsBuilder_ != null || threadingOptions_ != null;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public tensorflow.data.DatasetOptions.ThreadingOptions getThreadingOptions() {
        if (threadingOptionsBuilder_ == null) {
          return threadingOptions_ == null ? tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance() : threadingOptions_;
        } else {
          return threadingOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public Builder setThreadingOptions(tensorflow.data.DatasetOptions.ThreadingOptions value) {
        if (threadingOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          threadingOptions_ = value;
          onChanged();
        } else {
          threadingOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public Builder setThreadingOptions(
          tensorflow.data.DatasetOptions.ThreadingOptions.Builder builderForValue) {
        if (threadingOptionsBuilder_ == null) {
          threadingOptions_ = builderForValue.build();
          onChanged();
        } else {
          threadingOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public Builder mergeThreadingOptions(tensorflow.data.DatasetOptions.ThreadingOptions value) {
        if (threadingOptionsBuilder_ == null) {
          if (threadingOptions_ != null) {
            threadingOptions_ =
              tensorflow.data.DatasetOptions.ThreadingOptions.newBuilder(threadingOptions_).mergeFrom(value).buildPartial();
          } else {
            threadingOptions_ = value;
          }
          onChanged();
        } else {
          threadingOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public Builder clearThreadingOptions() {
        if (threadingOptionsBuilder_ == null) {
          threadingOptions_ = null;
          onChanged();
        } else {
          threadingOptions_ = null;
          threadingOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public tensorflow.data.DatasetOptions.ThreadingOptions.Builder getThreadingOptionsBuilder() {
        
        onChanged();
        return getThreadingOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder getThreadingOptionsOrBuilder() {
        if (threadingOptionsBuilder_ != null) {
          return threadingOptionsBuilder_.getMessageOrBuilder();
        } else {
          return threadingOptions_ == null ?
              tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance() : threadingOptions_;
        }
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.ThreadingOptions, tensorflow.data.DatasetOptions.ThreadingOptions.Builder, tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder> 
          getThreadingOptionsFieldBuilder() {
        if (threadingOptionsBuilder_ == null) {
          threadingOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.data.DatasetOptions.ThreadingOptions, tensorflow.data.DatasetOptions.ThreadingOptions.Builder, tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder>(
                  getThreadingOptions(),
                  getParentForChildren(),
                  isClean());
          threadingOptions_ = null;
        }
        return threadingOptionsBuilder_;
      }

      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       */
      public int getExternalStatePolicyValue() {
        if (optionalExternalStatePolicyCase_ == 6) {
          return ((java.lang.Integer) optionalExternalStatePolicy_).intValue();
        }
        return 0;
      }
      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       */
      public Builder setExternalStatePolicyValue(int value) {
        optionalExternalStatePolicyCase_ = 6;
        optionalExternalStatePolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       */
      public tensorflow.data.DatasetOptions.ExternalStatePolicy getExternalStatePolicy() {
        if (optionalExternalStatePolicyCase_ == 6) {
          @SuppressWarnings("deprecation")
          tensorflow.data.DatasetOptions.ExternalStatePolicy result = tensorflow.data.DatasetOptions.ExternalStatePolicy.valueOf(
              (java.lang.Integer) optionalExternalStatePolicy_);
          return result == null ? tensorflow.data.DatasetOptions.ExternalStatePolicy.UNRECOGNIZED : result;
        }
        return tensorflow.data.DatasetOptions.ExternalStatePolicy.POLICY_WARN;
      }
      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       */
      public Builder setExternalStatePolicy(tensorflow.data.DatasetOptions.ExternalStatePolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalExternalStatePolicyCase_ = 6;
        optionalExternalStatePolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       */
      public Builder clearExternalStatePolicy() {
        if (optionalExternalStatePolicyCase_ == 6) {
          optionalExternalStatePolicyCase_ = 0;
          optionalExternalStatePolicy_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.Options)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.Options)
    private static final tensorflow.data.DatasetOptions.Options DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.Options();
    }

    public static tensorflow.data.DatasetOptions.Options getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Options>
        PARSER = new com.google.protobuf.AbstractParser<Options>() {
      @java.lang.Override
      public Options parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Options(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Options> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Options> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.Options getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_DistributeOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_MapVectorization_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_MapVectorization_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_OptimizationOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_ThreadingOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_Options_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_Options_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/tensorflow/core/framework/dataset_opti" +
      "ons.proto\022\017tensorflow.data\"\177\n\021Distribute" +
      "Options\022;\n\021auto_shard_policy\030\001 \001(\0162 .ten" +
      "sorflow.data.AutoShardPolicy\022\025\n\013num_devi" +
      "ces\030\002 \001(\005H\000B\026\n\024optional_num_devices\"v\n\020M" +
      "apVectorization\022\021\n\007enabled\030\001 \001(\010H\000\022\034\n\022us" +
      "e_choose_fastest\030\002 \001(\010H\001B\022\n\020optional_ena" +
      "bledB\035\n\033optional_use_choose_fastest\"\311\010\n\023" +
      "OptimizationOptions\022%\n\033apply_default_opt" +
      "imizations\030\001 \001(\010H\000\022\022\n\010autotune\030\002 \001(\010H\001\022\032" +
      "\n\020autotune_buffers\030\003 \001(\010H\002\022\035\n\023autotune_c" +
      "pu_budget\030\004 \001(\005H\003\022\035\n\023autotune_ram_budget" +
      "\030\005 \001(\005H\004\022\027\n\rfilter_fusion\030\006 \001(\010H\005\022+\n!fil" +
      "ter_with_random_uniform_fusion\030\007 \001(\010H\006\022\036" +
      "\n\024hoist_random_uniform\030\010 \001(\010H\007\022\036\n\024map_an" +
      "d_batch_fusion\030\t \001(\010H\010\022\037\n\025map_and_filter" +
      "_fusion\030\n \001(\010H\t\022\024\n\nmap_fusion\030\013 \001(\010H\n\022\035\n" +
      "\023map_parallelization\030\014 \001(\010H\013\022<\n\021map_vect" +
      "orization\030\r \001(\0132!.tensorflow.data.MapVec" +
      "torization\022\032\n\020noop_elimination\030\016 \001(\010H\014\022\030" +
      "\n\016parallel_batch\030\017 \001(\010H\r\022%\n\033reorder_data" +
      "_discarding_ops\030\020 \001(\010H\016\022#\n\031shuffle_and_r" +
      "epeat_fusion\030\021 \001(\010H\017B&\n$optional_apply_d" +
      "efault_optimizationsB\023\n\021optional_autotun" +
      "eB\033\n\031optional_autotune_buffersB\036\n\034option" +
      "al_autotune_cpu_budgetB\036\n\034optional_autot" +
      "une_ram_budgetB\030\n\026optional_filter_fusion" +
      "B,\n*optional_filter_with_random_uniform_" +
      "fusionB\037\n\035optional_hoist_random_uniformB" +
      "\037\n\035optional_map_and_batch_fusionB \n\036opti" +
      "onal_map_and_filter_fusionB\025\n\023optional_m" +
      "ap_fusionB\036\n\034optional_map_parallelizatio" +
      "nB\033\n\031optional_noop_eliminationB\031\n\027option" +
      "al_parallel_batchB&\n$optional_reorder_da" +
      "ta_discarding_opsB$\n\"optional_shuffle_an" +
      "d_repeat_fusion\"\242\001\n\020ThreadingOptions\022\"\n\030" +
      "max_intra_op_parallelism\030\001 \001(\005H\000\022!\n\027priv" +
      "ate_threadpool_size\030\002 \001(\005H\001B#\n!optional_" +
      "max_intra_op_parallelismB\"\n optional_pri" +
      "vate_threadpool_size\"\212\003\n\007Options\022\027\n\rdete" +
      "rministic\030\001 \001(\010H\000\022>\n\022distribute_options\030" +
      "\002 \001(\0132\".tensorflow.data.DistributeOption" +
      "s\022B\n\024optimization_options\030\003 \001(\0132$.tensor" +
      "flow.data.OptimizationOptions\022\017\n\005slack\030\004" +
      " \001(\010H\001\022<\n\021threading_options\030\005 \001(\0132!.tens" +
      "orflow.data.ThreadingOptions\022E\n\025external" +
      "_state_policy\030\006 \001(\0162$.tensorflow.data.Ex" +
      "ternalStatePolicyH\002B\030\n\026optional_determin" +
      "isticB\020\n\016optional_slackB \n\036optional_exte" +
      "rnal_state_policy*K\n\017AutoShardPolicy\022\010\n\004" +
      "AUTO\020\000\022\010\n\004FILE\020\001\022\010\n\004DATA\020\002\022\010\n\004HINT\020\003\022\020\n\003" +
      "OFF\020\377\377\377\377\377\377\377\377\377\001*J\n\023ExternalStatePolicy\022\017\n" +
      "\013POLICY_WARN\020\000\022\021\n\rPOLICY_IGNORE\020\001\022\017\n\013POL" +
      "ICY_FAIL\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_tensorflow_data_DistributeOptions_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_DistributeOptions_descriptor,
        new java.lang.String[] { "AutoShardPolicy", "NumDevices", "OptionalNumDevices", });
    internal_static_tensorflow_data_MapVectorization_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_data_MapVectorization_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_MapVectorization_descriptor,
        new java.lang.String[] { "Enabled", "UseChooseFastest", "OptionalEnabled", "OptionalUseChooseFastest", });
    internal_static_tensorflow_data_OptimizationOptions_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_OptimizationOptions_descriptor,
        new java.lang.String[] { "ApplyDefaultOptimizations", "Autotune", "AutotuneBuffers", "AutotuneCpuBudget", "AutotuneRamBudget", "FilterFusion", "FilterWithRandomUniformFusion", "HoistRandomUniform", "MapAndBatchFusion", "MapAndFilterFusion", "MapFusion", "MapParallelization", "MapVectorization", "NoopElimination", "ParallelBatch", "ReorderDataDiscardingOps", "ShuffleAndRepeatFusion", "OptionalApplyDefaultOptimizations", "OptionalAutotune", "OptionalAutotuneBuffers", "OptionalAutotuneCpuBudget", "OptionalAutotuneRamBudget", "OptionalFilterFusion", "OptionalFilterWithRandomUniformFusion", "OptionalHoistRandomUniform", "OptionalMapAndBatchFusion", "OptionalMapAndFilterFusion", "OptionalMapFusion", "OptionalMapParallelization", "OptionalNoopElimination", "OptionalParallelBatch", "OptionalReorderDataDiscardingOps", "OptionalShuffleAndRepeatFusion", });
    internal_static_tensorflow_data_ThreadingOptions_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_ThreadingOptions_descriptor,
        new java.lang.String[] { "MaxIntraOpParallelism", "PrivateThreadpoolSize", "OptionalMaxIntraOpParallelism", "OptionalPrivateThreadpoolSize", });
    internal_static_tensorflow_data_Options_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tensorflow_data_Options_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_Options_descriptor,
        new java.lang.String[] { "Deterministic", "DistributeOptions", "OptimizationOptions", "Slack", "ThreadingOptions", "ExternalStatePolicy", "OptionalDeterministic", "OptionalSlack", "OptionalExternalStatePolicy", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
