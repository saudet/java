// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/dataset_options.proto

package org.tensorflow.proto.data;

public final class DatasetOptionsProtos {
  private DatasetOptionsProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_DistributeOptions_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_MapVectorization_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_MapVectorization_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_OptimizationOptions_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_ThreadingOptions_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_Options_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_Options_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/tensorflow/core/framework/dataset_opti" +
      "ons.proto\022\017tensorflow.data\"\177\n\021Distribute" +
      "Options\022;\n\021auto_shard_policy\030\001 \001(\0162 .ten" +
      "sorflow.data.AutoShardPolicy\022\025\n\013num_devi" +
      "ces\030\002 \001(\005H\000B\026\n\024optional_num_devices\"v\n\020M" +
      "apVectorization\022\021\n\007enabled\030\001 \001(\010H\000\022\034\n\022us" +
      "e_choose_fastest\030\002 \001(\010H\001B\022\n\020optional_ena" +
      "bledB\035\n\033optional_use_choose_fastest\"\311\010\n\023" +
      "OptimizationOptions\022%\n\033apply_default_opt" +
      "imizations\030\001 \001(\010H\000\022\022\n\010autotune\030\002 \001(\010H\001\022\032" +
      "\n\020autotune_buffers\030\003 \001(\010H\002\022\035\n\023autotune_c" +
      "pu_budget\030\004 \001(\005H\003\022\035\n\023autotune_ram_budget" +
      "\030\005 \001(\005H\004\022\027\n\rfilter_fusion\030\006 \001(\010H\005\022+\n!fil" +
      "ter_with_random_uniform_fusion\030\007 \001(\010H\006\022\036" +
      "\n\024hoist_random_uniform\030\010 \001(\010H\007\022\036\n\024map_an" +
      "d_batch_fusion\030\t \001(\010H\010\022\037\n\025map_and_filter" +
      "_fusion\030\n \001(\010H\t\022\024\n\nmap_fusion\030\013 \001(\010H\n\022\035\n" +
      "\023map_parallelization\030\014 \001(\010H\013\022<\n\021map_vect" +
      "orization\030\r \001(\0132!.tensorflow.data.MapVec" +
      "torization\022\032\n\020noop_elimination\030\016 \001(\010H\014\022\030" +
      "\n\016parallel_batch\030\017 \001(\010H\r\022%\n\033reorder_data" +
      "_discarding_ops\030\020 \001(\010H\016\022#\n\031shuffle_and_r" +
      "epeat_fusion\030\021 \001(\010H\017B&\n$optional_apply_d" +
      "efault_optimizationsB\023\n\021optional_autotun" +
      "eB\033\n\031optional_autotune_buffersB\036\n\034option" +
      "al_autotune_cpu_budgetB\036\n\034optional_autot" +
      "une_ram_budgetB\030\n\026optional_filter_fusion" +
      "B,\n*optional_filter_with_random_uniform_" +
      "fusionB\037\n\035optional_hoist_random_uniformB" +
      "\037\n\035optional_map_and_batch_fusionB \n\036opti" +
      "onal_map_and_filter_fusionB\025\n\023optional_m" +
      "ap_fusionB\036\n\034optional_map_parallelizatio" +
      "nB\033\n\031optional_noop_eliminationB\031\n\027option" +
      "al_parallel_batchB&\n$optional_reorder_da" +
      "ta_discarding_opsB$\n\"optional_shuffle_an" +
      "d_repeat_fusion\"\242\001\n\020ThreadingOptions\022\"\n\030" +
      "max_intra_op_parallelism\030\001 \001(\005H\000\022!\n\027priv" +
      "ate_threadpool_size\030\002 \001(\005H\001B#\n!optional_" +
      "max_intra_op_parallelismB\"\n optional_pri" +
      "vate_threadpool_size\"\212\003\n\007Options\022\027\n\rdete" +
      "rministic\030\001 \001(\010H\000\022>\n\022distribute_options\030" +
      "\002 \001(\0132\".tensorflow.data.DistributeOption" +
      "s\022B\n\024optimization_options\030\003 \001(\0132$.tensor" +
      "flow.data.OptimizationOptions\022\017\n\005slack\030\004" +
      " \001(\010H\001\022<\n\021threading_options\030\005 \001(\0132!.tens" +
      "orflow.data.ThreadingOptions\022E\n\025external" +
      "_state_policy\030\006 \001(\0162$.tensorflow.data.Ex" +
      "ternalStatePolicyH\002B\030\n\026optional_determin" +
      "isticB\020\n\016optional_slackB \n\036optional_exte" +
      "rnal_state_policy*K\n\017AutoShardPolicy\022\010\n\004" +
      "AUTO\020\000\022\010\n\004FILE\020\001\022\010\n\004DATA\020\002\022\010\n\004HINT\020\003\022\020\n\003" +
      "OFF\020\377\377\377\377\377\377\377\377\377\001*J\n\023ExternalStatePolicy\022\017\n" +
      "\013POLICY_WARN\020\000\022\021\n\rPOLICY_IGNORE\020\001\022\017\n\013POL" +
      "ICY_FAIL\020\002B3\n\031org.tensorflow.proto.dataB" +
      "\024DatasetOptionsProtosP\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_tensorflow_data_DistributeOptions_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_DistributeOptions_descriptor,
        new java.lang.String[] { "AutoShardPolicy", "NumDevices", "OptionalNumDevices", });
    internal_static_tensorflow_data_MapVectorization_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_data_MapVectorization_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_MapVectorization_descriptor,
        new java.lang.String[] { "Enabled", "UseChooseFastest", "OptionalEnabled", "OptionalUseChooseFastest", });
    internal_static_tensorflow_data_OptimizationOptions_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_OptimizationOptions_descriptor,
        new java.lang.String[] { "ApplyDefaultOptimizations", "Autotune", "AutotuneBuffers", "AutotuneCpuBudget", "AutotuneRamBudget", "FilterFusion", "FilterWithRandomUniformFusion", "HoistRandomUniform", "MapAndBatchFusion", "MapAndFilterFusion", "MapFusion", "MapParallelization", "MapVectorization", "NoopElimination", "ParallelBatch", "ReorderDataDiscardingOps", "ShuffleAndRepeatFusion", "OptionalApplyDefaultOptimizations", "OptionalAutotune", "OptionalAutotuneBuffers", "OptionalAutotuneCpuBudget", "OptionalAutotuneRamBudget", "OptionalFilterFusion", "OptionalFilterWithRandomUniformFusion", "OptionalHoistRandomUniform", "OptionalMapAndBatchFusion", "OptionalMapAndFilterFusion", "OptionalMapFusion", "OptionalMapParallelization", "OptionalNoopElimination", "OptionalParallelBatch", "OptionalReorderDataDiscardingOps", "OptionalShuffleAndRepeatFusion", });
    internal_static_tensorflow_data_ThreadingOptions_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_ThreadingOptions_descriptor,
        new java.lang.String[] { "MaxIntraOpParallelism", "PrivateThreadpoolSize", "OptionalMaxIntraOpParallelism", "OptionalPrivateThreadpoolSize", });
    internal_static_tensorflow_data_Options_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tensorflow_data_Options_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_Options_descriptor,
        new java.lang.String[] { "Deterministic", "DistributeOptions", "OptimizationOptions", "Slack", "ThreadingOptions", "ExternalStatePolicy", "OptionalDeterministic", "OptionalSlack", "OptionalExternalStatePolicy", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
